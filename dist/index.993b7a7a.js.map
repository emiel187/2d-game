{"mappings":"A,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,I,E,E,Q,C,E,Q,S,C,C,C,E,O,c,C,E,O,C,W,C,I,I,E,I,A,G,E,E,W,C,E,a,C,C,GCEA,IAgBA,EAhBI,EAAU,IAAI,IAgBlB,EAfA,SAAkB,CAAO,CAAE,CAAQ,EACjC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,MAAM,CAAG,EAAG,GAAK,EAC5C,EAAQ,GAAG,CAAC,CAAQ,CAAC,EAAE,CAAE,CACvB,QAAS,EACT,KAAM,CAAQ,CAAC,EAAI,EAAE,AACvB,EAEJ,C,G,E,Q,S,C,C,C,ECVA,EAAA,OAAA,CAAiB,IAAA,IAAoB,uCAAA,YAAA,GAAA,EAAwC,QAAQ,E,G,E,Q,S,C,C,C,ECArF,EAAA,OAAA,CAAiB,IAAA,IAAoB,+CAAA,YAAA,GAAA,EAAgD,QAAQ,E,G,E,Q,S,C,C,C,ECA7F,EAAA,OAAA,CAAiB,IAAA,IAAoB,iDAAA,YAAA,GAAA,EAAkD,QAAQ,E,G,E,Q,S,C,C,C,ECA/F,EAAA,OAAA,CAAiB,IAAA,IAAoB,gDAAA,YAAA,GAAA,EAAiD,QAAQ,E,G,E,Q,S,C,C,C,ECA9F,EAAA,OAAA,CAAiB,IAAA,IAAoB,+CAAA,YAAA,GAAA,EAAgD,QAAQ,E,G,E,Q,S,C,C,C,ECA7F,EAAA,OAAA,CAAiB,IAAA,IAAoB,+CAAA,YAAA,GAAA,EAAgD,QAAQ,E,G,E,Q,S,C,C,C,ECA7F,EAAA,OAAA,CAAiB,IAAA,IAAoB,8CAAA,YAAA,GAAA,EAA+C,QAAQ,E,G,E,Q,S,C,C,C,ECA5F,EAAA,OAAA,CAAiB,IAAA,IAAoB,2DAAA,YAAA,GAAA,EAA4D,QAAQ,E,G,E,Q,S,C,C,C,ECAzG,EAAA,OAAA,CAAiB,IAAA,IAAoB,+CAAA,YAAA,GAAA,EAAgD,QAAQ,E,G,E,Q,S,C,C,C,ECA7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","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-b26f2a416536871e.js","node_modules/@parcel/runtime-js/lib/runtime-26f3031b1b3abba0.js","node_modules/@parcel/runtime-js/lib/runtime-40f27f2e094c52bd.js","node_modules/@parcel/runtime-js/lib/runtime-082ec801f277eadd.js","node_modules/@parcel/runtime-js/lib/runtime-50a607521ba7da0f.js","node_modules/@parcel/runtime-js/lib/runtime-02921c5dc66ac370.js","node_modules/@parcel/runtime-js/lib/runtime-73fc88fa201cef72.js","node_modules/@parcel/runtime-js/lib/runtime-e0774dd5137a078c.js","node_modules/@parcel/runtime-js/lib/runtime-fe34333966a625e9.js","node_modules/@parcel/runtime-js/lib/runtime-cd98dbd919cf8bc5.js","node_modules/@parcel/runtime-js/lib/runtime-6f12a498a2218b22.js","node_modules/@parcel/runtime-js/lib/runtime-85b871fcc683d95f.js","node_modules/@parcel/runtime-js/lib/runtime-47fdddfdb13551fd.js","node_modules/@parcel/runtime-js/lib/runtime-2698c3a37fd47814.js","node_modules/@parcel/runtime-js/lib/runtime-004bfc81c4fceb50.js","node_modules/@parcel/runtime-js/lib/runtime-252a5cd7ab44e05c.js","node_modules/@parcel/runtime-js/lib/runtime-ad20080beb361dfc.js","node_modules/@parcel/runtime-js/lib/runtime-bd087e4dd83f0cc6.js","node_modules/@parcel/runtime-js/lib/runtime-c58e17e10b7eeb66.js","node_modules/@parcel/runtime-js/lib/runtime-779fad4ac069898a.js","node_modules/@parcel/runtime-js/lib/runtime-8ed9a8da925e1d43.js","node_modules/@parcel/runtime-js/lib/runtime-1eb3c4335e8f8968.js","node_modules/@parcel/runtime-js/lib/runtime-18576c6a3e31af3d.js","node_modules/@parcel/runtime-js/lib/runtime-2716eb29e1a88166.js","node_modules/@parcel/runtime-js/lib/runtime-95131398ec32bfad.js","node_modules/@parcel/runtime-js/lib/runtime-d49ee27d6cb5a819.js","node_modules/@parcel/runtime-js/lib/runtime-4e42540b55779aa5.js","node_modules/@parcel/runtime-js/lib/runtime-6aeb09107e55bc64.js","node_modules/@parcel/runtime-js/lib/runtime-6aa0ebf15b27f654.js","node_modules/@parcel/runtime-js/lib/runtime-1b6a09d4acfe5bd3.js","node_modules/@parcel/runtime-js/lib/runtime-737f1789e8134478.js","node_modules/@parcel/runtime-js/lib/runtime-59cf7cad39b74bbe.js","node_modules/@parcel/runtime-js/lib/runtime-2b5388e01ac3d020.js","node_modules/@parcel/runtime-js/lib/runtime-6386c492bf90f8bb.js","node_modules/@parcel/runtime-js/lib/runtime-f86ea6bed1f5cb86.js","game/index.js","game/game.js","game/utils/settings.js","game/entities/player.js","game/entities/entity.js","game/levels/level-data.js","game/utils/canvas.js","game/utils/game.js","game/entities/wall.js","game/entities/explosive.js","game/entities/guard.js","game/entities/obstacle.js","game/entities/powerup.js","game/entities/exit.js","game/screens/game-over.js","game/utils/theme.js","game/assets.js","game/screens/splash.js","game/screens/index.js","game/screens/welcome.js","game/screens/high-score.js","game/utils/date.js","game/screens/level-completed.js","game/screens/story.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequiref92b\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequiref92b\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"27Lyk\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $18c11f3350a906ea$export$6503ec6e8aabbaf, (v) => $18c11f3350a906ea$export$6503ec6e8aabbaf = v);\nvar $18c11f3350a906ea$export$6503ec6e8aabbaf;\nvar $18c11f3350a906ea$export$f7ad0328861e2f03;\n\"use strict\";\nvar $18c11f3350a906ea$var$mapping = new Map();\nfunction $18c11f3350a906ea$var$register(baseUrl, manifest) {\n    for(var i = 0; i < manifest.length - 1; i += 2)$18c11f3350a906ea$var$mapping.set(manifest[i], {\n        baseUrl: baseUrl,\n        path: manifest[i + 1]\n    });\n}\nfunction $18c11f3350a906ea$var$resolve(id) {\n    var resolved = $18c11f3350a906ea$var$mapping.get(id);\n    if (resolved == null) throw new Error(\"Could not resolve bundle with id \" + id);\n    return new URL(resolved.path, resolved.baseUrl).toString();\n}\n$18c11f3350a906ea$export$6503ec6e8aabbaf = $18c11f3350a906ea$var$register;\n$18c11f3350a906ea$export$f7ad0328861e2f03 = $18c11f3350a906ea$var$resolve;\n\n});\n\nparcelRegister(\"12jfn\", function(module, exports) {\nmodule.exports = new URL(\"Player.00f3c4d9.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"6dKHh\", function(module, exports) {\nmodule.exports = new URL(\"Player_Actions.bca40ab9.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"5dwZ7\", function(module, exports) {\nmodule.exports = new URL(\"orc1_attack_full.fdb40cd8.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"2mQDJ\", function(module, exports) {\nmodule.exports = new URL(\"orc1_death_full.bc9dd58e.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"5BzKt\", function(module, exports) {\nmodule.exports = new URL(\"orc1_hurt_full.64131593.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"gl7lL\", function(module, exports) {\nmodule.exports = new URL(\"orc1_idle_full.f3f4fbc3.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"1SJUz\", function(module, exports) {\nmodule.exports = new URL(\"orc1_run_full.e8aa27ea.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"jtYkY\", function(module, exports) {\nmodule.exports = new URL(\"orc1_run_attack_front_full.e30546ea.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"5wsiR\", function(module, exports) {\nmodule.exports = new URL(\"orc1_walk_full.d1a5a195.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"kHKgT\", function(module, exports) {\nmodule.exports = new URL(\"orc1_walk_attack_front_full.63d42a92.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"1ofSC\", function(module, exports) {\nmodule.exports = new URL(\"orc2_attack_full.6c54090d.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"l82DG\", function(module, exports) {\nmodule.exports = new URL(\"orc2_death_full.277da092.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"aqAs5\", function(module, exports) {\nmodule.exports = new URL(\"orc2_hurt_full.48867d66.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"geGul\", function(module, exports) {\nmodule.exports = new URL(\"orc2_idle_full.d60b055c.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"kpWxC\", function(module, exports) {\nmodule.exports = new URL(\"orc2_run_full.22586806.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"6L4gS\", function(module, exports) {\nmodule.exports = new URL(\"orc2_run_attack_full.f470036c.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"l2YvV\", function(module, exports) {\nmodule.exports = new URL(\"orc2_walk_full.af776d65.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"lqbBE\", function(module, exports) {\nmodule.exports = new URL(\"orc2_walk_attack_full.b7833add.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"8e4iu\", function(module, exports) {\nmodule.exports = new URL(\"orc3_attack_full.0a748c24.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"f1cee\", function(module, exports) {\nmodule.exports = new URL(\"orc3_death_full.01806b71.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"1WwBw\", function(module, exports) {\nmodule.exports = new URL(\"orc3_hurt_full.5859101d.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"8FuLj\", function(module, exports) {\nmodule.exports = new URL(\"orc3_idle_full.416d922d.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"c4xtF\", function(module, exports) {\nmodule.exports = new URL(\"orc3_run_full.5b379633.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"gQ05Q\", function(module, exports) {\nmodule.exports = new URL(\"orc3_run_attack_full.bad10f7d.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"9mpTG\", function(module, exports) {\nmodule.exports = new URL(\"orc3_walk_full.999de51c.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"a62Tn\", function(module, exports) {\nmodule.exports = new URL(\"orc3_walk_attack_full.c6f0a883.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"hcwiQ\", function(module, exports) {\nmodule.exports = new URL(\"Rock6_1.73bf617e.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"gfIFS\", function(module, exports) {\nmodule.exports = new URL(\"Sand_ruins3.73cad079.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"dcz8z\", function(module, exports) {\nmodule.exports = new URL(\"Snow_ruins3.dff3d94b.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"8WxSr\", function(module, exports) {\nmodule.exports = new URL(\"Yellow_ruins3.8dea241e.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"gOdju\", function(module, exports) {\nmodule.exports = new URL(\"Green_crystal2.bc1273ec.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"l0OAv\", function(module, exports) {\nmodule.exports = new URL(\"Red_crystal2.a52bdbb5.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"6Z5FU\", function(module, exports) {\nmodule.exports = new URL(\"Blue_crystal2.5546ca30.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"23iPg\", function(module, exports) {\nmodule.exports = new URL(\"Yellow_crystal2.9e18555c.png\", import.meta.url).toString();\n\n});\n\nvar $9fc64c475023e0d0$exports = {};\n\n(parcelRequire(\"27Lyk\")).register(new URL(\"\", import.meta.url).toString(), JSON.parse('[\"3xbAi\",\"index.993b7a7a.js\",\"itZfU\",\"Player.00f3c4d9.png\",\"ita0D\",\"Player_Actions.bca40ab9.png\",\"kaz4F\",\"orc1_attack_full.fdb40cd8.png\",\"aA0na\",\"orc1_death_full.bc9dd58e.png\",\"14oS4\",\"orc1_hurt_full.64131593.png\",\"aBOtM\",\"orc1_idle_full.f3f4fbc3.png\",\"fom00\",\"orc1_run_full.e8aa27ea.png\",\"jmNAU\",\"orc1_run_attack_front_full.e30546ea.png\",\"32waU\",\"orc1_walk_full.d1a5a195.png\",\"dG0jj\",\"orc1_walk_attack_front_full.63d42a92.png\",\"hiHze\",\"orc2_attack_full.6c54090d.png\",\"fgvI7\",\"orc2_death_full.277da092.png\",\"bU4g7\",\"orc2_hurt_full.48867d66.png\",\"lIfx8\",\"orc2_idle_full.d60b055c.png\",\"cZ4gW\",\"orc2_run_full.22586806.png\",\"eoVup\",\"orc2_run_attack_full.f470036c.png\",\"kua4s\",\"orc2_walk_full.af776d65.png\",\"acXCG\",\"orc2_walk_attack_full.b7833add.png\",\"63M4D\",\"orc3_attack_full.0a748c24.png\",\"llK0O\",\"orc3_death_full.01806b71.png\",\"4aDmc\",\"orc3_hurt_full.5859101d.png\",\"1SuzR\",\"orc3_idle_full.416d922d.png\",\"5iGxJ\",\"orc3_run_full.5b379633.png\",\"dEoH5\",\"orc3_run_attack_full.bad10f7d.png\",\"c82Rz\",\"orc3_walk_full.999de51c.png\",\"g0TG9\",\"orc3_walk_attack_full.c6f0a883.png\",\"6I6cX\",\"Rock6_1.73bf617e.png\",\"rncMt\",\"Sand_ruins3.73cad079.png\",\"5Ossz\",\"Snow_ruins3.dff3d94b.png\",\"d8MMO\",\"Yellow_ruins3.8dea241e.png\",\"h5Jde\",\"Green_crystal2.bc1273ec.png\",\"2LNSA\",\"Red_crystal2.a52bdbb5.png\",\"9XSoq\",\"Blue_crystal2.5546ca30.png\",\"7TG8P\",\"Yellow_crystal2.9e18555c.png\"]'));\n\n// Game settings and configurations\n// - This file contains global settings and configurations for the game\n// - These settings can be adjusted to change the game's behavior and appearance\n// Canvas settings\nconst $a159b56109fa6e34$export$ee79b8018014417 = {\n    width: 1280,\n    height: 640,\n    backgroundColor: \"#2c2c2c\",\n    cellWidth: 64,\n    cellHeight: 64\n};\nconst $a159b56109fa6e34$export$b54787693599973a = {\n    initialLives: 3,\n    speed: 5,\n    color: \"#ff69b4\"\n};\nconst $a159b56109fa6e34$export$46cdd0893df07df1 = {\n    initialLevel: 1,\n    maxLevels: 10,\n    scoreIncrement: 100\n};\nconst $a159b56109fa6e34$export$eb39dd4a78414223 = {\n    enemyWidth: 91,\n    enemyHeight: 91,\n    obstacleColor: \"#c62828\",\n    powerupColor: \"#1565c0\",\n    guardColor: \"#ff69b4\",\n    explosiveColor: \"#ffd54f\",\n    exitColor: \"#4caf50\"\n};\nconst $a159b56109fa6e34$export$970c77a5eb3ea069 = {\n    mute: false,\n    volume: 0.5\n};\nconst $a159b56109fa6e34$export$582ce1a401bc3f08 = {\n    up: \"ArrowUp\",\n    down: \"ArrowDown\",\n    left: \"ArrowLeft\",\n    right: \"ArrowRight\",\n    attack: \"a\",\n    space: \" \",\n    esc: \"Escape\",\n    pick: \"p\",\n    axe: \"x\",\n    potion: \"u\"\n}; // Add more settings as needed for other aspects of the game\n\n\n\nclass $613d8f9a07a57d35$var$Entity {\n    _position;\n    _width;\n    _height;\n    _sprites;\n    _type;\n    constructor(x, y, type, assets, width = (0, $a159b56109fa6e34$export$ee79b8018014417).cellWidth, height = (0, $a159b56109fa6e34$export$ee79b8018014417).cellHeight){\n        this._position = {\n            x: x,\n            y: y\n        };\n        this._width = width;\n        this._height = height;\n        this._type = type;\n        this._sprites = this.selectSprites(assets);\n    }\n    getPosition() {\n        return {\n            ...this._position\n        };\n    }\n    getType() {\n        return this._type;\n    }\n    getHitBox() {\n        return {\n            x: this._position.x,\n            y: this._position.y,\n            width: this._width,\n            height: this._height\n        };\n    }\n    selectSprites(assets) {\n        // This method should be overridden by subclasses to select appropriate sprites\n        return {};\n    }\n    update() {\n    // Abstract method to be implemented by subclasses\n    }\n    draw(ctx) {\n    // Abstract method to be implemented by subclasses\n    }\n}\nvar $613d8f9a07a57d35$export$2e2bcd8739ae039 = $613d8f9a07a57d35$var$Entity;\n\n\n\nclass $58a9defd0974d4fa$var$Player extends (0, $613d8f9a07a57d35$export$2e2bcd8739ae039) {\n    #health;\n    #speed;\n    #blockedDirections;\n    constructor(x, y, assets){\n        super(x, y, \"player\", assets);\n        this.#health = 100;\n        this.#speed = 5;\n        this.explosives = [];\n        this.keys = [];\n        this.powerups = [];\n        this.#blockedDirections = {\n            left: false,\n            right: false,\n            up: false,\n            down: false\n        };\n        this.currentFrame = 0;\n        this.frameCount = 0;\n        this.movement = \"down\";\n        this.action = \"idle\";\n    }\n    selectSprites(assets) {\n        return {\n            movement: assets.playerMovement,\n            actions: assets.playerActions\n        };\n    }\n    getPickupRange() {\n        return {\n            x: this._position.x,\n            y: this._position.y,\n            width: this._width,\n            height: this._height\n        };\n    }\n    getHitBox() {\n        return {\n            x: this._position.x + this._width * 0.25,\n            y: this._position.y + this._height * 0.25,\n            width: this._width * 0.5,\n            height: this._height * 0.5\n        };\n    }\n    collide(entity) {\n        if (this.action !== \"idle\") {\n            console.log(\"Colliding\", this.action, entity.getPosition());\n            this.action = \"idle\";\n            // Determine which direction is blocked\n            const entityPos = entity.getPosition();\n            const playerPos = this.getPosition();\n            if (entityPos.x < playerPos.x) this.#blockedDirections.left = true;\n            else if (entityPos.x > playerPos.x) this.#blockedDirections.right = true;\n            if (entityPos.y < playerPos.y) this.#blockedDirections.up = true;\n            else if (entityPos.y > playerPos.y) this.#blockedDirections.down = true;\n            console.log(\"blocked directions\", this.#blockedDirections);\n        }\n    }\n    canMove(direction) {\n        return !this.#blockedDirections[direction];\n    }\n    moveLeft() {\n        if (this.canMove(\"left\")) {\n            this._position.x -= this.#speed;\n            this.action = \"walk\";\n            this.movement = \"left\";\n            this.#blockedDirections.right = false;\n        }\n    }\n    moveRight() {\n        if (this.canMove(\"right\")) {\n            this._position.x += this.#speed;\n            this.action = \"walk\";\n            this.movement = \"right\";\n            this.#blockedDirections.left = false;\n        }\n    }\n    moveUp() {\n        if (this.canMove(\"up\")) {\n            this._position.y -= this.#speed;\n            this.action = \"walk\";\n            this.movement = \"up\";\n            this.#blockedDirections.down = false;\n        }\n    }\n    moveDown() {\n        if (this.canMove(\"down\")) {\n            this._position.y += this.#speed;\n            this.action = \"walk\";\n            this.movement = \"down\";\n            this.#blockedDirections.up = false;\n        }\n    }\n    attack() {\n        this.action = \"attack\";\n        // Implement attack logic here\n        console.log(\"Attacking\");\n    }\n    pick() {\n        this.action = \"pick\";\n        // Implement pick logic here\n        console.log(\"Picking\");\n        // Determine which object we are trying to pick based on player's position and direction\n        const pickRange = 32; // Assuming a pick range of 32 pixels (half a cell)\n        let pickPosition = {\n            x: this._position.x,\n            y: this._position.y\n        };\n        // Adjust pick position based on player's movement direction\n        switch(this.movement){\n            case \"left\":\n                pickPosition.x -= pickRange;\n                break;\n            case \"right\":\n                pickPosition.x += pickRange;\n                break;\n            case \"up\":\n                pickPosition.y -= pickRange;\n                break;\n            case \"down\":\n                pickPosition.y += pickRange;\n                break;\n        }\n        // Check for pickable objects at the determined position\n        // This part would typically interact with the game's entity management system\n        // For now, we'll just log the position where we're trying to pick\n        console.log(`Attempting to pick at position: (${pickPosition.x}, ${pickPosition.y})`);\n    // TODO: Implement actual object detection and picking logic\n    // This would involve checking for collisions with pickable entities\n    // and handling the pickup if a valid object is found\n    }\n    axe() {\n        this.action = \"axe\";\n        // Implement axe logic here\n        console.log(\"Axe\");\n    }\n    potion() {\n        this.action = \"potion\";\n        // Implement potion logic here\n        console.log(\"Potion\");\n    }\n    collectExplosive(explosive) {\n        this.explosives.push(explosive);\n    }\n    collectKey(key) {\n        this.keys.push(key);\n    }\n    collectPowerup(powerup) {\n        this.powerups.push(powerup);\n        // Implement powerup effect here\n        console.log(`Collected powerup: ${powerup}`);\n    }\n    update() {\n        // Don't reset blocked directions here\n        this.frameCount++;\n        if (this.frameCount >= 10) {\n            // Adjust frame rate as needed\n            let frames_per_action = 6;\n            if (this.action === \"walk\" || this.action === \"idle\" || this.action === \"jump\") frames_per_action = 6;\n            else if (this.action === \"attack\" || this.action === \"duck\") frames_per_action = 4;\n            else if (this.action === \"pick\" || this.action === \"axe\" || this.action === \"potion\") frames_per_action = 4;\n            this.currentFrame = (this.currentFrame + 1) % frames_per_action;\n            this.frameCount = 0;\n        }\n    }\n    // Add a new method to check for collisions before moving\n    checkCollision(direction) {\n        const nextPosition = {\n            ...this._position\n        };\n        switch(direction){\n            case \"left\":\n                nextPosition.x -= this.#speed;\n                break;\n            case \"right\":\n                nextPosition.x += this.#speed;\n                break;\n            case \"up\":\n                nextPosition.y -= this.#speed;\n                break;\n            case \"down\":\n                nextPosition.y += this.#speed;\n                break;\n        }\n        return nextPosition;\n    }\n    draw(ctx) {\n        let spriteHeight = 32;\n        let spriteWidth = 32;\n        let spriteX = 0;\n        let spriteY = 0;\n        let spriteSheet = this._sprites.movement;\n        // mapping the sprite sheet to the actions\n        switch(this.action){\n            case \"walk\":\n                switch(this.movement){\n                    case \"left\":\n                        spriteY = 4 * spriteHeight;\n                        break;\n                    case \"right\":\n                        spriteY = 4 * spriteHeight;\n                        break;\n                    case \"up\":\n                        spriteY = 2 * spriteHeight;\n                        break;\n                    case \"down\":\n                        spriteY = 0 * spriteHeight;\n                        break;\n                }\n                break;\n            case \"crawl\":\n                switch(this.movement){\n                    case \"down\":\n                        spriteY = 0 * spriteHeight;\n                        break;\n                    case \"left\":\n                        spriteY = 9 * spriteHeight;\n                        break;\n                    case \"right\":\n                        spriteY = 9 * spriteHeight;\n                        break;\n                    case \"up\":\n                        spriteY = 0 * spriteHeight;\n                        break;\n                }\n                break;\n            case \"attack\":\n                switch(this.movement){\n                    case \"down\":\n                        spriteY = 6 * spriteHeight;\n                        break;\n                    case \"left\":\n                        spriteY = 7 * spriteHeight;\n                        break;\n                    case \"right\":\n                        spriteY = 7 * spriteHeight;\n                        break;\n                    case \"up\":\n                        spriteY = 8 * spriteHeight;\n                        break;\n                }\n                break;\n            case \"pick\":\n                spriteHeight = 48;\n                spriteWidth = 48;\n                spriteSheet = this._sprites.actions;\n                switch(this.movement){\n                    case \"down\":\n                        spriteY = 1 * spriteHeight;\n                        break;\n                    case \"left\":\n                        spriteY = 0 * spriteHeight;\n                        break;\n                    case \"right\":\n                        spriteY = 0 * spriteHeight;\n                        break;\n                    case \"up\":\n                        spriteY = 2 * spriteHeight;\n                        break;\n                }\n                break;\n            case \"axe\":\n                spriteHeight = 48;\n                spriteWidth = 48;\n                spriteSheet = this._sprites.actions;\n                spriteX = 3 * spriteWidth;\n                spriteY = 10 * spriteHeight;\n                break;\n            case \"potion\":\n                spriteHeight = 48;\n                spriteWidth = 48;\n                spriteSheet = this._sprites.actions;\n                // spriteY = 11 * spriteHeight;\n                switch(this.movement){\n                    case \"down\":\n                        spriteY = 9 * spriteHeight;\n                        break;\n                    case \"left\":\n                        spriteY = 9 * spriteHeight;\n                        break;\n                    case \"right\":\n                        spriteY = 9 * spriteHeight;\n                        break;\n                    case \"up\":\n                        spriteY = 10 * spriteHeight;\n                        break;\n                }\n                break;\n            case \"idle\":\n            default:\n                switch(this.movement){\n                    case \"down\":\n                        spriteY = 0 * spriteHeight;\n                        break;\n                    case \"left\":\n                        spriteY = 1 * spriteHeight;\n                        break;\n                    case \"right\":\n                        spriteY = 1 * spriteHeight;\n                        break;\n                    case \"up\":\n                        spriteY = 2 * spriteHeight;\n                        break;\n                }\n                break;\n        }\n        console.log(\"drawing player\", this.action, spriteX, spriteY);\n        spriteX = this.currentFrame * spriteWidth;\n        ctx.save();\n        if (this.movement === \"left\") {\n            ctx.scale(-1, 1);\n            ctx.drawImage(spriteSheet, spriteX, spriteY, spriteWidth, spriteHeight, -this._position.x - this._width, this._position.y, (0, $a159b56109fa6e34$export$ee79b8018014417).cellWidth, (0, $a159b56109fa6e34$export$ee79b8018014417).cellHeight);\n        } else ctx.drawImage(spriteSheet, spriteX, spriteY, spriteWidth, spriteHeight, this._position.x, this._position.y, (0, $a159b56109fa6e34$export$ee79b8018014417).cellWidth, (0, $a159b56109fa6e34$export$ee79b8018014417).cellHeight);\n        ctx.restore();\n        this.drawBoundingBox(ctx);\n    }\n    drawBoundingBox(ctx) {\n        // Hitbox\n        ctx.save();\n        ctx.strokeStyle = \"red\";\n        ctx.lineWidth = 2;\n        ctx.strokeRect(this._position.x + this._width * 0.25, this._position.y + this._height * 0.25, this._width * 0.5, this._height * 0.5);\n        ctx.restore();\n        ctx.save();\n        // Pickup range\n        ctx.strokeStyle = \"green\";\n        ctx.lineWidth = 2;\n        ctx.strokeRect(this._position.x, this._position.y, this._width, this._height);\n        ctx.restore();\n    }\n}\nvar $58a9defd0974d4fa$export$2e2bcd8739ae039 = $58a9defd0974d4fa$var$Player;\n\n\n// Level data\n// - Define the structure of each level (layout of the labyrinth)\n// - Specify positions of obstacles, powerups, explosives, guards\n// - Include metadata (level number, difficulty, etc.)\nclass $acea30df869dd93d$var$LevelData {\n    constructor(){\n        this.levels = [];\n    }\n    addLevel(level) {\n        this.levels.push(level);\n    }\n    getLevel(levelNumber) {\n        return this.levels[levelNumber - 1] || null;\n    }\n}\nclass $acea30df869dd93d$var$Level {\n    constructor(number, difficulty, layout, theme){\n        this.number = number;\n        this.difficulty = difficulty;\n        this.layout = layout;\n        this.theme = theme;\n    }\n}\n// Example usage:\nconst $acea30df869dd93d$var$levelData = new $acea30df869dd93d$var$LevelData();\n// Add levels\n$acea30df869dd93d$var$levelData.addLevel(new $acea30df869dd93d$var$Level(1, \"easy\", [\n    [\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \"\n    ],\n    [\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \"\n    ],\n    [\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \"#\",\n        \"P\",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \"#\",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \"\n    ],\n    [\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \"#\",\n        \"#\",\n        \" \",\n        \" \",\n        \"#\",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \"\n    ],\n    [\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \"X\",\n        \"#\",\n        \" \",\n        \"C\",\n        \"#\",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \"\n    ],\n    [\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \"#\",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \"\n    ],\n    [\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \"#\",\n        \"#\",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"G\",\n        \"#\",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \"\n    ],\n    [\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \"#\",\n        \" \",\n        \"C\",\n        \"G\",\n        \" \",\n        \"E\",\n        \" \",\n        \"#\",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \"\n    ],\n    [\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \"\n    ],\n    [\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \"\n    ]\n]));\n$acea30df869dd93d$var$levelData.addLevel(new $acea30df869dd93d$var$Level(2, \"easy\", [\n    [\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \"\n    ],\n    [\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \"\n    ],\n    [\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \"#\",\n        \"P\",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \"#\",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \"\n    ],\n    [\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \"#\",\n        \"#\",\n        \" \",\n        \" \",\n        \"#\",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \"\n    ],\n    [\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"C\",\n        \"#\",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \"\n    ],\n    [\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \"#\",\n        \"E\",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \"#\",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \"\n    ],\n    [\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \"#\",\n        \"#\",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"G\",\n        \"#\",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \"\n    ],\n    [\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \"#\",\n        \" \",\n        \"C\",\n        \"G\",\n        \" \",\n        \"E\",\n        \" \",\n        \"X\",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \"\n    ],\n    [\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \"\n    ],\n    [\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \"\n    ]\n]));\n$acea30df869dd93d$var$levelData.addLevel(new $acea30df869dd93d$var$Level(3, \"medium\", [\n    [\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\"\n    ],\n    [\n        \"#\",\n        \"P\",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \"#\"\n    ],\n    [\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \" \",\n        \"#\"\n    ],\n    [\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \" \",\n        \"#\"\n    ],\n    [\n        \"#\",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \"#\"\n    ],\n    [\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \" \",\n        \"#\"\n    ],\n    [\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \" \",\n        \"#\"\n    ],\n    [\n        \"#\",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \"#\"\n    ],\n    [\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\"\n    ]\n]));\n$acea30df869dd93d$var$levelData.addLevel(new $acea30df869dd93d$var$Level(4, \"hard\", [\n    [\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\"\n    ],\n    [\n        \"#\",\n        \"P\",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \"#\"\n    ],\n    [\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \" \",\n        \"#\"\n    ],\n    [\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \" \",\n        \"#\"\n    ],\n    [\n        \"#\",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \"#\"\n    ],\n    [\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \" \",\n        \"#\"\n    ],\n    [\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \" \",\n        \"#\"\n    ],\n    [\n        \"#\",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \"#\"\n    ],\n    [\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\"\n    ]\n]));\n$acea30df869dd93d$var$levelData.addLevel(new $acea30df869dd93d$var$Level(5, \"expert\", [\n    [\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\"\n    ],\n    [\n        \"#\",\n        \"P\",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \"#\"\n    ],\n    [\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \" \",\n        \"#\"\n    ],\n    [\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \" \",\n        \"#\"\n    ],\n    [\n        \"#\",\n        \"O\",\n        \" \",\n        \"O\",\n        \" \",\n        \"O\",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \"#\"\n    ],\n    [\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \" \",\n        \"#\"\n    ],\n    [\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \" \",\n        \"#\"\n    ],\n    [\n        \"#\",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \"#\"\n    ],\n    [\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \" \",\n        \"#\"\n    ],\n    [\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \"#\",\n        \" \",\n        \" \",\n        \"#\"\n    ],\n    [\n        \"#\",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \" \",\n        \"#\"\n    ],\n    [\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\",\n        \"#\"\n    ]\n]));\nvar $acea30df869dd93d$export$2e2bcd8739ae039 = $acea30df869dd93d$var$levelData;\n\n\n// helper functions for the canvas\nfunction $da50dde907126ea6$export$a1c066623ac679d3(canvas, context) {\n    context.clearRect(0, 0, canvas.width, canvas.height);\n}\nfunction $da50dde907126ea6$export$28e08eff11ac64f6(container) {\n    container.innerHTML = \"\";\n}\n\n\nfunction $a334e0c5dc817c7c$export$5efe44c485c74673(rect1, rect2) {\n    return rect1.x < rect2.x + rect2.width && rect1.x + rect1.width > rect2.x && rect1.y < rect2.y + rect2.height && rect1.y + rect1.height > rect2.y;\n}\n\n\n\n\n// Wall entity class\n// - Represents the walls in the game\n// - Defines properties such as position, width, height\n// - May include methods for rendering the wall\n// - Could include collision detection logic specific to walls\n// - Might have different types of walls (e.g., breakable, unbreakable)\n// - Could include methods for special wall behaviors (e.g., secret passages)\nclass $98c34eedc7f1531b$var$Wall extends (0, $613d8f9a07a57d35$export$2e2bcd8739ae039) {\n    #type;\n    constructor(x, y, type, assets){\n        super(x, y);\n        this.#type = type; // 'normal', 'breakable', 'secret'\n        this._sprite = assets.rock;\n    }\n    getType() {\n        return this.#type;\n    }\n    collide(entity) {\n        // Basic collision logic\n        console.log(`Collision with ${entity.constructor.name}`);\n    }\n    update() {\n    // Update wall state if needed (e.g., for breakable walls)\n    }\n    draw(ctx) {\n        const spriteX = 0;\n        let spriteY = 0;\n        // Select sprite based on wall type\n        switch(this.#type){\n            case \"breakable\":\n                spriteY = (0, $a159b56109fa6e34$export$ee79b8018014417).cellHeight;\n                break;\n            case \"secret\":\n                spriteY = (0, $a159b56109fa6e34$export$ee79b8018014417).cellHeight * 2;\n                break;\n            default:\n                spriteY = 0;\n        }\n        ctx.drawImage(this._sprite, spriteX, spriteY, this._width, this._height, this._position.x, this._position.y, this._width, this._height);\n    }\n}\nvar $98c34eedc7f1531b$export$2e2bcd8739ae039 = $98c34eedc7f1531b$var$Wall;\n\n\n\n// Explosive entity\n// - Properties: position, isHidden (under obstacle), isActive\n// - Methods: detonate (trigger explosion), checkCollision (with player)\n// - Handle explosion effects (reduce player lives, visual effects)\nclass $39d01997aa12fc44$var$Explosive extends (0, $613d8f9a07a57d35$export$2e2bcd8739ae039) {\n    #isHidden;\n    #isActive;\n    constructor(x, y, assets){\n        super(x, y);\n        this.#isHidden = true;\n        this.#isActive = false;\n        this._sprite = assets.explosiveSprite;\n    }\n    isHidden() {\n        return this.#isHidden;\n    }\n    isActive() {\n        return this.#isActive;\n    }\n    reveal() {\n        this.#isHidden = false;\n    }\n    detonate() {\n        this.#isActive = true;\n        // Implement explosion logic here\n        console.log(\"Explosive detonated!\");\n    }\n    checkCollision(entity) {\n    // Implement collision detection logic\n    // Return true if colliding, false otherwise\n    }\n    update() {\n    // Update explosive state if needed\n    }\n    draw(ctx) {\n        if (!this.#isHidden) ctx.drawImage(this._sprite, this._position.x, this._position.y, this._width, this._height);\n    }\n}\nvar $39d01997aa12fc44$export$2e2bcd8739ae039 = $39d01997aa12fc44$var$Explosive;\n\n\n\n\n\n// Guard entity class\n// - Represents the guards in the game\n// - Can move towards the player\n// - Can detect the player's position\n// - Can attack the player\n// - Can be defeated by the player\n// - Can drop powerups when defeated\n// - Can drop explosives when defeated\n// - Can drop keys when defeated\n// - Can drop keys when defeated\nclass $467c9c65b653837c$var$Guard extends (0, $613d8f9a07a57d35$export$2e2bcd8739ae039) {\n    #speed;\n    #detectionRange;\n    #currentSprite;\n    constructor(x, y, type, assets){\n        super(x, y, type, assets, (0, $a159b56109fa6e34$export$eb39dd4a78414223).enemyWidth, (0, $a159b56109fa6e34$export$eb39dd4a78414223).enemyHeight);\n        this.action = \"idle\";\n        this.movement = [\n            \"down\",\n            \"up\",\n            \"left\",\n            \"right\"\n        ][Math.floor(Math.random() * 4)];\n        this.#speed = 1;\n        this.#detectionRange = 5 * (0, $a159b56109fa6e34$export$ee79b8018014417).cellWidth;\n        this.#currentSprite = this._sprites.idle;\n        this.frameCount = 0;\n        this.currentFrame = 0;\n    }\n    selectSprites(assets) {\n        return {\n            attack: assets[`${this._type}_Attack`],\n            death: assets[`${this._type}_Death`],\n            hurt: assets[`${this._type}_Hurt`],\n            idle: assets[`${this._type}_Idle`],\n            run: assets[`${this._type}_Run`],\n            runAttack: assets[`${this._type}_Run_Attack`],\n            walk: assets[`${this._type}_Walk`],\n            walkAttack: assets[`${this._type}_Walk_Attack`]\n        };\n    }\n    moveTowards(target, walls) {\n        const dx = target.x - this._position.x;\n        const dy = target.y - this._position.y;\n        // Determine primary direction\n        if (Math.abs(dx) > Math.abs(dy)) this.movement = dx > 0 ? \"right\" : \"left\";\n        else this.movement = dy > 0 ? \"down\" : \"up\";\n        // Check if movement is possible (not blocked by a wall)\n        const nextPosition = {\n            ...this._position,\n            width: (0, $a159b56109fa6e34$export$ee79b8018014417).cellWidth / 2,\n            height: (0, $a159b56109fa6e34$export$ee79b8018014417).cellHeight / 2\n        };\n        switch(this.movement){\n            case \"up\":\n                nextPosition.y -= this.#speed;\n                break;\n            case \"down\":\n                nextPosition.y += this.#speed;\n                break;\n            case \"left\":\n                nextPosition.x -= this.#speed;\n                break;\n            case \"right\":\n                nextPosition.x += this.#speed;\n                break;\n        }\n        const willCollideWithWalls = walls.some((wall)=>(0, $a334e0c5dc817c7c$export$5efe44c485c74673)(nextPosition, wall.getHitBox()));\n        const willCollideWithPlayer = (0, $a334e0c5dc817c7c$export$5efe44c485c74673)(nextPosition, target);\n        if (willCollideWithPlayer) {\n            console.log(\"Attacking player\");\n            // Determine guard's facing direction based on target position\n            if (Math.abs(dx) > Math.abs(dy)) this.movement = dx > 0 ? \"right\" : \"left\";\n            else this.movement = dy > 0 ? \"down\" : \"up\";\n            this.attack();\n        } else if (!willCollideWithWalls) {\n            console.log(\"Moving towards player\");\n            this._position = nextPosition;\n            this.walk();\n        } else {\n            console.log(\"Idle\");\n            this.idle();\n        }\n    }\n    detectPlayer(playerPosition, walls) {\n        const dx = playerPosition.x - this._position.x;\n        const dy = playerPosition.y - this._position.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        if (distance <= this.#detectionRange) {\n            // Check if there's a clear line of sight\n            const step = {\n                x: dx / distance,\n                y: dy / distance\n            };\n            let checkPosition = {\n                ...this._position,\n                width: (0, $a159b56109fa6e34$export$ee79b8018014417).cellWidth / 2,\n                height: (0, $a159b56109fa6e34$export$ee79b8018014417).cellHeight / 2\n            };\n            for(let i = 0; i < distance; i += (0, $a159b56109fa6e34$export$ee79b8018014417).cellWidth / 2){\n                checkPosition.x += step.x * ((0, $a159b56109fa6e34$export$ee79b8018014417).cellWidth / 2);\n                checkPosition.y += step.y * ((0, $a159b56109fa6e34$export$ee79b8018014417).cellWidth / 2);\n                if (walls.some((wall)=>(0, $a334e0c5dc817c7c$export$5efe44c485c74673)(checkPosition, wall.getHitBox()))) return false; // Wall blocking the line of sight\n            }\n            return true; // Clear line of sight to the player\n        }\n        return false; // Player out of detection range\n    }\n    idle() {\n        this.action = \"idle\";\n        this.#currentSprite = this._sprites.idle;\n    }\n    walk() {\n        this.action = \"walk\";\n        this.#currentSprite = this._sprites.walk;\n    }\n    attack() {\n        this.action = \"attack\";\n        this.#currentSprite = this._sprites.attack;\n    }\n    defeat() {\n        this.action = \"dead\";\n        this.#currentSprite = this._sprites.death;\n    // Return dropped items (powerups, explosives, keys)\n    }\n    lookAround() {\n        this.action = \"idle\";\n        this.#currentSprite = this._sprites.idle;\n        const directions = [\n            \"up\",\n            \"right\",\n            \"down\",\n            \"left\"\n        ];\n        const currentIndex = directions.indexOf(this.movement);\n        if (currentIndex !== -1) this.movement = directions[(currentIndex + 1) % 4];\n        else this.movement = \"up\";\n    }\n    update(playerPosition, walls) {\n        const frames_per_action = 4;\n        const frames_per_look = 180; // Look around every 60 frames (about 1 second at 60 FPS)\n        const max_frame_count = this.action === \"idle\" ? 180 : 20;\n        this.frameCount++;\n        if (this.frameCount >= max_frame_count) {\n            this.frameCount = 0;\n            this.currentFrame = (this.currentFrame + 1) % frames_per_action;\n        }\n        if (this.detectPlayer(playerPosition, walls)) this.moveTowards(playerPosition, walls);\n        else if (this.frameCount % frames_per_look === 0) this.lookAround();\n        else this.idle();\n    }\n    draw(ctx) {\n        let spriteHeight = 64;\n        let spriteWidth = 64;\n        let spriteX = this.currentFrame * spriteWidth;\n        let spriteY = 0;\n        // Determine spriteY based on movement direction\n        switch(this.movement){\n            case \"down\":\n                spriteY = 0 * spriteHeight;\n                break;\n            case \"up\":\n                spriteY = 1 * spriteHeight;\n                break;\n            case \"left\":\n                spriteY = 2 * spriteHeight;\n                break;\n            case \"right\":\n                spriteY = 3 * spriteHeight;\n                break;\n        }\n        ctx.drawImage(this.#currentSprite, spriteX, spriteY, spriteWidth, spriteHeight, this._position.x - 10, this._position.y - 10, this._width, this._height);\n    }\n}\nvar $467c9c65b653837c$export$2e2bcd8739ae039 = $467c9c65b653837c$var$Guard;\n\n\n\n\n// Obstacle entity class\n// - Represents the obstacles in the game\n// - Can be destroyed by the player\n// - Can drop powerups when destroyed\n// - Can drop explosives when destroyed\n// - Can drop keys when destroyed\n// - Can drop keys when destroyed\nclass $1d2933984714e742$var$Obstacle extends (0, $613d8f9a07a57d35$export$2e2bcd8739ae039) {\n    #health;\n    #type;\n    constructor(x, y, type, assets){\n        super(x, y);\n        this.#type = type;\n        this.#health = 100;\n        this._sprite = assets.obstacleSprite;\n    }\n    getType() {\n        return this.#type;\n    }\n    takeDamage(amount) {\n        this.#health -= amount;\n        if (this.#health <= 0) return this.destroy();\n        return null;\n    }\n    destroy() {\n        // Implement destruction logic\n        console.log(\"Obstacle destroyed!\");\n    // Return dropped items (powerups, explosives, keys)\n    }\n    update() {\n    // Update obstacle state if needed\n    }\n    draw(ctx) {\n        if (this.#health > 0) ctx.drawImage(this._sprite, this._position.x, this._position.y, this._width, this._height);\n    }\n}\nvar $1d2933984714e742$export$2e2bcd8739ae039 = $1d2933984714e742$var$Obstacle;\n\n\n\n// Powerup entity class\n// - Represents the powerups in the game\n// - Can be collected by the player\n// - Can be dropped by guards\n// - Can be dropped by obstacles\n// - Properties: position, type, collected\n// - Methods: collect (mark as collected), update, draw\nclass $563c41e90239c5f8$var$Powerup extends (0, $613d8f9a07a57d35$export$2e2bcd8739ae039) {\n    #collected;\n    constructor(x, y, type, assets){\n        super(x, y, type, assets);\n        this.#collected = false;\n    }\n    selectSprites(assets) {\n        switch(this._type){\n            case \"health\":\n                return {\n                    crystal: assets.redCrystal\n                };\n            case \"speed\":\n                return {\n                    crystal: assets.blueCrystal\n                };\n            case \"strength\":\n                return {\n                    crystal: assets.greenCrystal\n                };\n            case \"invincibility\":\n                return {\n                    crystal: assets.yellowCrystal\n                };\n            default:\n                return {\n                    crystal: assets.blueCrystal\n                };\n        }\n    }\n    collect() {\n        if (!this.#collected) {\n            this.#collected = true;\n            console.log(`Powerup collected: ${this._type}`);\n        // Return the powerup effect\n        }\n    }\n    // ... rest of the Powerup class methods ...\n    draw(ctx) {\n        if (!this.#collected) ctx.drawImage(this._sprites.crystal, this._position.x, this._position.y, this._width, this._height);\n    }\n}\nvar $563c41e90239c5f8$export$2e2bcd8739ae039 = $563c41e90239c5f8$var$Powerup;\n\n\n\n// Exit entity class\n// - Represents the exit in the game\n// - Can be collected by the player\n// - Properties: position\n// - Methods: collect (mark as collected), update, draw\nclass $249cd40060b2b87a$var$Exit extends (0, $613d8f9a07a57d35$export$2e2bcd8739ae039) {\n    constructor(x, y, assets){\n        super(x, y, \"exit\", assets);\n        this._sprite = assets.yellowRuin;\n        this._sparkles = this._createSparkles();\n    }\n    _createSparkles() {\n        const sparkleCount = 20;\n        const sparkles = [];\n        for(let i = 0; i < sparkleCount; i++)sparkles.push({\n            x: this._position.x + Math.random() * this._width,\n            y: this._position.y + Math.random() * this._height,\n            vy: -0.5 + Math.random() * 0.5 // vertical velocity\n        });\n        return sparkles;\n    }\n    _updateSparkles() {\n        for (const sparkle of this._sparkles){\n            sparkle.y += sparkle.vy;\n            if (sparkle.y < this._position.y) sparkle.y = this._position.y + this._height;\n        }\n    }\n    draw(ctx) {\n        // Draw a semi-transparent dark rectangle over the current cell\n        ctx.fillStyle = \"rgba(255, 255, 200, 0.3)\"; // Light yellow color with 30% opacity\n        ctx.fillRect(this._position.x, this._position.y, this._width, this._height);\n        // Draw the exit sprite\n        ctx.drawImage(this._sprite, this._position.x, this._position.y, this._width, this._height);\n        // Update and draw sparkles\n        this._updateSparkles();\n        const sparkleSize = 1;\n        ctx.fillStyle = \"rgba(255, 255, 255, 0.8)\";\n        for (const sparkle of this._sparkles){\n            ctx.beginPath();\n            ctx.arc(sparkle.x, sparkle.y, sparkleSize, 0, Math.PI * 2);\n            ctx.fill();\n        }\n    }\n}\nvar $249cd40060b2b87a$export$2e2bcd8739ae039 = $249cd40060b2b87a$var$Exit;\n\n\n// Theme configuration for the game\n// This file contains styles and colors used across different screens\nconst $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9 = {\n    colors: {\n        background: \"#1a0d00\",\n        text: \"#d4af37\",\n        primary: \"#8B4513\",\n        secondary: \"#2e8b57\",\n        accent: \"#ff4500\"\n    },\n    fonts: {\n        main: '\"Luminari\", \"Papyrus\", fantasy',\n        subtitle: '\"Arial\", sans-serif'\n    },\n    fontSize: {\n        title: \"52px\",\n        subtitle: \"28px\",\n        button: \"24px\"\n    },\n    spacing: {\n        padding: \"25px\"\n    },\n    button: {\n        minWidth: \"265px\",\n        padding: \"15px 35px\",\n        borderRadius: \"4px\"\n    }\n};\nfunction $f1d2fac5237d2fb3$export$be3cc0f1e33e9443(container) {\n    container.style.backgroundColor = $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9.colors.background;\n    container.style.color = $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9.colors.text;\n    container.style.fontFamily = $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9.fonts.main;\n    container.style.textAlign = \"center\";\n    container.style.padding = $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9.spacing.padding;\n}\nfunction $f1d2fac5237d2fb3$export$a3f040807323755c(button, color = $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9.colors.primary) {\n    button.style.display = \"block\";\n    button.style.margin = \"20px auto\";\n    button.style.padding = $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9.button.padding;\n    button.style.fontSize = $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9.fontSize.button;\n    button.style.cursor = \"pointer\";\n    button.style.backgroundColor = color;\n    button.style.color = $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9.colors.text;\n    button.style.border = \"2px solid \" + $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9.colors.text;\n    button.style.borderRadius = $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9.button.borderRadius;\n    button.style.textTransform = \"uppercase\";\n    button.style.letterSpacing = \"2px\";\n    button.style.boxShadow = \"0 0 10px rgba(212, 175, 55, 0.5)\";\n    button.style.transition = \"all 0.3s ease\";\n    button.style.minWidth = $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9.button.minWidth;\n    // Add hover effect\n    button.addEventListener(\"mouseover\", ()=>{\n        button.style.transform = \"scale(1.1)\";\n    });\n    button.addEventListener(\"mouseout\", ()=>{\n        button.style.transform = \"scale(1)\";\n    });\n}\n\n\nfunction $d8e2017acca67ccc$export$fd5e0515ef81867f(finalScore, onTryAgain, onMainMenu) {\n    const container = document.getElementById(\"game-container\");\n    container.innerHTML = \"\"; // Clear previous content\n    const gameOverScreen = document.createElement(\"div\");\n    gameOverScreen.id = \"game-over-screen\";\n    const title = document.createElement(\"h1\");\n    title.textContent = \"Game Over\";\n    gameOverScreen.appendChild(title);\n    const message = document.createElement(\"p\");\n    message.textContent = \"Oops! Looks like you hit a wall. Better luck next time!\";\n    gameOverScreen.appendChild(message);\n    const scoreDisplay = document.createElement(\"p\");\n    scoreDisplay.textContent = `Your Score: ${finalScore}`;\n    gameOverScreen.appendChild(scoreDisplay);\n    const tryAgainButton = document.createElement(\"button\");\n    tryAgainButton.textContent = \"Try Again\";\n    tryAgainButton.onclick = onTryAgain;\n    gameOverScreen.appendChild(tryAgainButton);\n    const mainMenuButton = document.createElement(\"button\");\n    mainMenuButton.textContent = \"Main Menu\";\n    mainMenuButton.onclick = onMainMenu;\n    gameOverScreen.appendChild(mainMenuButton);\n    container.appendChild(gameOverScreen);\n    // Apply styles\n    (0, $f1d2fac5237d2fb3$export$be3cc0f1e33e9443)(container);\n    title.style.fontSize = (0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).fontSize.title;\n    title.style.marginBottom = \"20px\";\n    message.style.fontSize = (0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).fontSize.subtitle;\n    message.style.marginBottom = \"20px\";\n    scoreDisplay.style.fontSize = (0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).fontSize.subtitle;\n    scoreDisplay.style.marginBottom = \"20px\";\n    (0, $f1d2fac5237d2fb3$export$a3f040807323755c)(tryAgainButton, (0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).colors.primary);\n    (0, $f1d2fac5237d2fb3$export$a3f040807323755c)(mainMenuButton, (0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).colors.secondary);\n}\n\n\nclass $ec88279b3c8da4f1$export$985739bfa5723e08 {\n    constructor(containerId, canvas, context, assets){\n        this.container = document.getElementById(containerId);\n        this.canvas = canvas;\n        this.context = context;\n        this.player = null;\n        this.board = [];\n        this.entities = [];\n        this.walls = [];\n        this.exit = null;\n        this.lives = (0, $a159b56109fa6e34$export$b54787693599973a).initialLives;\n        this.score = 0;\n        this.currentLevel = (0, $a159b56109fa6e34$export$46cdd0893df07df1).initialLevel;\n        this.isGameOver = false;\n        this.started = false;\n        this.assets = assets;\n        this.explosives = [];\n        this.guards = [];\n        this.obstacles = [];\n        this.powerups = [];\n    }\n    initializeBoard() {\n        const level = (0, $acea30df869dd93d$export$2e2bcd8739ae039).getLevel(this.currentLevel);\n        if (level) {\n            this.walls = [];\n            this.board = level.layout;\n            for(let y = 0; y < level.layout.length; y++)for(let x = 0; x < level.layout[y].length; x++){\n                if (level.layout[y][x] === \"#\") this.walls.push(new (0, $98c34eedc7f1531b$export$2e2bcd8739ae039)(x * (0, $a159b56109fa6e34$export$ee79b8018014417).cellWidth, y * (0, $a159b56109fa6e34$export$ee79b8018014417).cellHeight, \"normal\", this.assets.levelAssets));\n                if (level.layout[y][x] === \"X\") this.exit = new (0, $249cd40060b2b87a$export$2e2bcd8739ae039)(x * (0, $a159b56109fa6e34$export$ee79b8018014417).cellWidth, y * (0, $a159b56109fa6e34$export$ee79b8018014417).cellHeight, this.assets.levelAssets);\n            }\n        }\n    }\n    initializePlayer() {\n        const level = (0, $acea30df869dd93d$export$2e2bcd8739ae039).getLevel(this.currentLevel);\n        if (level) for(let y = 0; y < level.layout.length; y++){\n            for(let x = 0; x < level.layout[y].length; x++)if (level.layout[y][x] === \"P\") {\n                this.player = new (0, $58a9defd0974d4fa$export$2e2bcd8739ae039)(x * (0, $a159b56109fa6e34$export$ee79b8018014417).cellWidth, y * (0, $a159b56109fa6e34$export$ee79b8018014417).cellHeight, this.assets.playerAssets);\n                this.setupInput();\n                return;\n            }\n        }\n    }\n    setupInput() {\n        let actionTimeout;\n        const debounceAction = (callback, delay)=>{\n            return ()=>{\n                clearTimeout(actionTimeout);\n                actionTimeout = setTimeout(()=>{\n                    this.player.action = \"idle\";\n                }, delay);\n                callback();\n            };\n        };\n        window.addEventListener(\"keydown\", (event)=>{\n            switch(event.key){\n                case (0, $a159b56109fa6e34$export$582ce1a401bc3f08).up:\n                    debounceAction(()=>this.player.moveUp(), 1000)();\n                    break;\n                case (0, $a159b56109fa6e34$export$582ce1a401bc3f08).down:\n                    debounceAction(()=>this.player.moveDown(), 1000)();\n                    break;\n                case (0, $a159b56109fa6e34$export$582ce1a401bc3f08).left:\n                    debounceAction(()=>this.player.moveLeft(), 1000)();\n                    break;\n                case (0, $a159b56109fa6e34$export$582ce1a401bc3f08).right:\n                    debounceAction(()=>this.player.moveRight(), 1000)();\n                    break;\n                case (0, $a159b56109fa6e34$export$582ce1a401bc3f08).jump:\n                    debounceAction(()=>this.player.jump(), 1000)();\n                    break;\n                case (0, $a159b56109fa6e34$export$582ce1a401bc3f08).attack:\n                    debounceAction(()=>this.player.attack(), 250)();\n                    break;\n                case (0, $a159b56109fa6e34$export$582ce1a401bc3f08).pick:\n                    debounceAction(()=>this.player.pick(), 150)();\n                    break;\n                case (0, $a159b56109fa6e34$export$582ce1a401bc3f08).axe:\n                    debounceAction(()=>this.player.axe(), 150)();\n                    break;\n                case (0, $a159b56109fa6e34$export$582ce1a401bc3f08).potion:\n                    debounceAction(()=>this.player.potion(), 500)();\n                    break;\n            }\n        });\n    }\n    initializeEntities() {\n        const level = (0, $acea30df869dd93d$export$2e2bcd8739ae039).getLevel(this.currentLevel);\n        if (level) {\n            this.explosives = [];\n            this.guards = [];\n            this.obstacles = [];\n            this.powerups = [];\n            for(let y = 0; y < level.layout.length; y++)for(let x = 0; x < level.layout[y].length; x++){\n                const cell = level.layout[y][x];\n                const position = {\n                    x: x * (0, $a159b56109fa6e34$export$ee79b8018014417).cellWidth,\n                    y: y * (0, $a159b56109fa6e34$export$ee79b8018014417).cellHeight\n                };\n                switch(cell){\n                    case \"E\":\n                        this.explosives.push(new (0, $39d01997aa12fc44$export$2e2bcd8739ae039)(position.x, position.y, this.assets));\n                        break;\n                    case \"G\":\n                        const randomOrc = Math.floor(Math.random() * 3) + 1;\n                        console.log(`orc${randomOrc}`);\n                        this.guards.push(new (0, $467c9c65b653837c$export$2e2bcd8739ae039)(position.x, position.y, `orc${randomOrc}`, this.assets.guardAssets));\n                        break;\n                    case \"O\":\n                        this.obstacles.push(new (0, $1d2933984714e742$export$2e2bcd8739ae039)(position.x, position.y, \"normal\", this.assets));\n                        break;\n                    case \"C\":\n                        const randomPowerup = Math.floor(Math.random() * 2) + 1;\n                        this.powerups.push(new (0, $563c41e90239c5f8$export$2e2bcd8739ae039)(position.x, position.y, randomPowerup == 1 ? \"health\" : \"mana\", this.assets.powerupsAssets));\n                        break;\n                }\n            }\n        }\n    }\n    updateGameState() {\n        this.checkCollisions(); // Move this before player update\n        this.player.update();\n        this.explosives.forEach((explosive)=>explosive.update());\n        this.guards.forEach((guard)=>guard.update(this.player.getHitBox(), this.walls));\n        this.obstacles.forEach((obstacle)=>obstacle.update());\n        this.powerups.forEach((powerup)=>powerup.update());\n        this.checkLevelCompletion();\n    }\n    checkCollisions() {\n        const playerPosition = this.player.getHitBox();\n        // Check collisions for each direction\n        [\n            \"left\",\n            \"right\",\n            \"up\",\n            \"down\"\n        ].forEach((direction)=>{\n            const nextPosition = this.player.checkCollision(direction);\n            const willCollide = this.walls.some((wall)=>(0, $a334e0c5dc817c7c$export$5efe44c485c74673)({\n                    ...playerPosition,\n                    x: nextPosition.x + playerPosition.width * 0.25,\n                    y: nextPosition.y + playerPosition.height * 0.25\n                }, wall.getHitBox()));\n            if (willCollide) this.player.collide({\n                getPosition: ()=>nextPosition\n            });\n        });\n        this.walls.forEach((wall)=>{\n            if ((0, $a334e0c5dc817c7c$export$5efe44c485c74673)(playerPosition, wall.getHitBox())) {\n                console.log(\"colliding with wall\");\n                this.player.collide(wall);\n            }\n        });\n        this.explosives.forEach((explosive, index)=>{\n            if ((0, $a334e0c5dc817c7c$export$5efe44c485c74673)(playerPosition, explosive.getPosition())) {\n                if (explosive.isActive()) ;\n                else if (!explosive.isHidden()) {\n                    this.player.collectExplosive(explosive);\n                    this.explosives.splice(index, 1);\n                }\n            }\n        });\n        this.guards.forEach((guard, index)=>{\n            (0, $a334e0c5dc817c7c$export$5efe44c485c74673)(playerPosition, guard.getPosition());\n        });\n        this.obstacles.forEach((obstacle, index)=>{\n            (0, $a334e0c5dc817c7c$export$5efe44c485c74673)(playerPosition, obstacle.getPosition());\n        });\n        this.powerups.forEach((powerup, index)=>{\n            if ((0, $a334e0c5dc817c7c$export$5efe44c485c74673)(this.player.getPickupRange(), powerup.getPosition())) {\n                const effect = powerup.collect();\n                this.player.applyPowerup(effect);\n                this.powerups.splice(index, 1);\n            }\n        });\n    }\n    checkLevelCompletion() {\n        // Handle level completion (transition to next level or game over)\n        if (this.isLevelComplete()) {\n            this.currentLevel += 1;\n            this.initializeBoard();\n            this.initializePlayer();\n            this.initializeEntities();\n        }\n    }\n    isLevelComplete() {\n        // Game ends when player reaches the exit\n        return (0, $a334e0c5dc817c7c$export$5efe44c485c74673)(this.player.getHitBox(), this.exit.getHitBox());\n    }\n    render() {\n        // Render the game board and entities (player, obstacles, powerups, guards)\n        // Clear the canvas\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        // Draw the grid\n        this.drawGrid();\n        // Draw the walls\n        this.walls.forEach((wall)=>wall.draw(this.context));\n        // Draw the entities\n        this.obstacles.forEach((obstacle)=>obstacle.draw(this.context));\n        this.powerups.forEach((powerup)=>powerup.draw(this.context));\n        this.guards.forEach((guard)=>guard.draw(this.context));\n        this.explosives.forEach((explosive)=>explosive.draw(this.context));\n        // Draw the exit\n        if (this.exit) this.exit.draw(this.context);\n        // Draw the player\n        this.player.draw(this.context);\n    }\n    drawGrid() {\n        // Create a gradient for the background\n        const gradient = this.context.createRadialGradient(this.canvas.width / 2, this.canvas.height / 2, 0, this.canvas.width / 2, this.canvas.height / 2, Math.max(this.canvas.width, this.canvas.height) / 2);\n        gradient.addColorStop(0, \"#3E8948\"); // Center color (lighter green)\n        gradient.addColorStop(1, \"#1A3B1F\"); // Edge color (darker green)\n        // Fill background with gradient\n        this.context.fillStyle = gradient;\n        this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n        // Set grid style\n        this.context.strokeStyle = \"rgba(0, 255, 0, 0.1)\";\n        this.context.lineWidth = 1;\n        // Draw grid lines\n        this.context.beginPath();\n        // Vertical lines\n        for(let x = 0; x <= this.canvas.width; x += (0, $a159b56109fa6e34$export$ee79b8018014417).cellWidth){\n            this.context.moveTo(x, 0);\n            this.context.lineTo(x, this.canvas.height);\n        }\n        // Horizontal lines\n        for(let y = 0; y <= this.canvas.height; y += (0, $a159b56109fa6e34$export$ee79b8018014417).cellHeight){\n            this.context.moveTo(0, y);\n            this.context.lineTo(this.canvas.width, y);\n        }\n        this.context.stroke();\n    }\n    gameLoop() {\n        // Main game loop\n        if (this.isGameOver) return;\n        this.updateGameState();\n        this.render();\n        requestAnimationFrame(this.gameLoop.bind(this));\n    }\n    start() {\n        this.started = true;\n        (0, $da50dde907126ea6$export$28e08eff11ac64f6)(this.container);\n        this.container.appendChild(this.canvas);\n        this.initializeBoard();\n        this.initializePlayer();\n        this.initializeEntities();\n        this.gameLoop();\n    }\n    continue() {\n        this.started = true;\n        (0, $da50dde907126ea6$export$28e08eff11ac64f6)(this.container);\n        this.container.appendChild(this.canvas);\n    }\n}\nvar $ec88279b3c8da4f1$export$2e2bcd8739ae039 = $ec88279b3c8da4f1$export$985739bfa5723e08;\n\n\n// handle the assets\n// Load player sprite sheets\n// Load enemy sprite sheets\n// Load powerup sprite sheets\n// Load explosive sprite sheets\n// Load guard sprite sheets\n// Load obstacle images\nfunction $e5dd9c56a403a66c$var$loadImage(src, onProgress) {\n    return new Promise((resolve, reject)=>{\n        try {\n            console.log(\"Loading image:\", src);\n            const img = new Image();\n            img.src = src;\n            img.onload = ()=>{\n                console.log(\"Image loaded:\", src);\n                onProgress(src, img);\n                resolve(img);\n            };\n            img.onerror = (error)=>{\n                console.error(\"Error loading image:\", src, error);\n                reject(new Error(`Failed to load image: ${src}`));\n            };\n        } catch (error) {\n            console.error(\"Error loading image:\", src, error);\n            reject(new Error(`Unexpected error loading image: ${src}`));\n        }\n    });\n}\n\n\nasync function $e5dd9c56a403a66c$export$a9303be352ef857(onProgress) {\n    console.log(\"Loading player assets...\");\n    const playerMovement = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"12jfn\")), onProgress);\n    const playerActions = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"6dKHh\")), onProgress);\n    return {\n        playerMovement: playerMovement,\n        playerActions: playerActions\n    };\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nasync function $e5dd9c56a403a66c$export$de46def7a5f5a392(onProgress) {\n    console.log(\"Loading guard assets...\");\n    // ORC 1\n    const orc1_Attack = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"5dwZ7\")), onProgress);\n    const orc1_Death = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"2mQDJ\")), onProgress);\n    const orc1_Hurt = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"5BzKt\")), onProgress);\n    const orc1_Idle = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"gl7lL\")), onProgress);\n    const orc1_Run = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"1SJUz\")), onProgress);\n    const orc1_Run_Attack = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"jtYkY\")), onProgress);\n    const orc1_Walk = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"5wsiR\")), onProgress);\n    const orc1_Walk_Attack = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"kHKgT\")), onProgress);\n    // ORC 2\n    const orc2_Attack = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"1ofSC\")), onProgress);\n    const orc2_Death = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"l82DG\")), onProgress);\n    const orc2_Hurt = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"aqAs5\")), onProgress);\n    const orc2_Idle = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"geGul\")), onProgress);\n    const orc2_Run = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"kpWxC\")), onProgress);\n    const orc2_Run_Attack = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"6L4gS\")), onProgress);\n    const orc2_Walk = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"l2YvV\")), onProgress);\n    const orc2_Walk_Attack = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"lqbBE\")), onProgress);\n    // ORC 3\n    const orc3_Attack = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"8e4iu\")), onProgress);\n    const orc3_Death = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"f1cee\")), onProgress);\n    const orc3_Hurt = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"1WwBw\")), onProgress);\n    const orc3_Idle = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"8FuLj\")), onProgress);\n    const orc3_Run = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"c4xtF\")), onProgress);\n    const orc3_Run_Attack = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"gQ05Q\")), onProgress);\n    const orc3_Walk = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"9mpTG\")), onProgress);\n    const orc3_Walk_Attack = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"a62Tn\")), onProgress);\n    return {\n        orc1_Attack: orc1_Attack,\n        orc1_Death: orc1_Death,\n        orc1_Hurt: orc1_Hurt,\n        orc1_Idle: orc1_Idle,\n        orc1_Run: orc1_Run,\n        orc1_Run_Attack: orc1_Run_Attack,\n        orc1_Walk: orc1_Walk,\n        orc1_Walk_Attack: orc1_Walk_Attack,\n        orc2_Attack: orc2_Attack,\n        orc2_Death: orc2_Death,\n        orc2_Hurt: orc2_Hurt,\n        orc2_Idle: orc2_Idle,\n        orc2_Run: orc2_Run,\n        orc2_Run_Attack: orc2_Run_Attack,\n        orc2_Walk: orc2_Walk,\n        orc2_Walk_Attack: orc2_Walk_Attack,\n        orc3_Attack: orc3_Attack,\n        orc3_Death: orc3_Death,\n        orc3_Hurt: orc3_Hurt,\n        orc3_Idle: orc3_Idle,\n        orc3_Run: orc3_Run,\n        orc3_Run_Attack: orc3_Run_Attack,\n        orc3_Walk: orc3_Walk,\n        orc3_Walk_Attack: orc3_Walk_Attack\n    };\n}\n\n\n\n\nasync function $e5dd9c56a403a66c$export$41cc1a8d96039105(onProgress) {\n    console.log(\"Loading level assets...\");\n    const rock = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"hcwiQ\")), onProgress);\n    const sandRuin = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"gfIFS\")), onProgress);\n    const snowRuin = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"dcz8z\")), onProgress);\n    const yellowRuin = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"8WxSr\")), onProgress);\n    return {\n        rock: rock,\n        sandRuin: sandRuin,\n        snowRuin: snowRuin,\n        yellowRuin: yellowRuin\n    };\n}\n\n\n\n\nasync function $e5dd9c56a403a66c$export$3df0938dc8828e8b(onProgress) {\n    console.log(\"Loading powerups assets...\");\n    const greenCrystal = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"gOdju\")), onProgress);\n    const redCrystal = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"l0OAv\")), onProgress);\n    const blueCrystal = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"6Z5FU\")), onProgress);\n    const yellowCrystal = await $e5dd9c56a403a66c$var$loadImage((parcelRequire(\"23iPg\")), onProgress);\n    return {\n        greenCrystal: greenCrystal,\n        redCrystal: redCrystal,\n        blueCrystal: blueCrystal,\n        yellowCrystal: yellowCrystal\n    };\n}\n\n\n// Splash screen\n// - Display game logo or animation\n// - Briefly show before transitioning to the welcome screen\n// - Style: background color, logo/animation size and position\nfunction $88f9d7237b3a208b$export$bcd396c5d66a748f(initialise, onComplete) {\n    const splashScreen = document.createElement(\"div\");\n    splashScreen.id = \"splash-screen\";\n    splashScreen.style.position = \"absolute\";\n    splashScreen.style.top = \"0\";\n    splashScreen.style.left = \"0\";\n    splashScreen.style.width = \"100%\";\n    splashScreen.style.height = \"100%\";\n    splashScreen.style.backgroundColor = \"#000\";\n    splashScreen.style.display = \"flex\";\n    splashScreen.style.justifyContent = \"center\";\n    splashScreen.style.alignItems = \"center\";\n    splashScreen.style.color = \"#fff\";\n    splashScreen.style.fontSize = \"24px\";\n    splashScreen.innerText = \"Loading... 0%\";\n    document.body.appendChild(splashScreen);\n    initialise().then(()=>{\n        onComplete();\n        document.body.removeChild(splashScreen);\n    });\n}\nfunction $88f9d7237b3a208b$export$1c045d0cca6b82bc(progress) {\n    console.log(\"Updating splash screen progress:\", progress);\n    const splashScreen = document.getElementById(\"splash-screen\");\n    if (splashScreen) splashScreen.innerText = `Loading... ${progress}%`;\n}\n\n\n// handle the screens\n\nfunction $08405cc63f9df333$export$cea7e42d5654180f(onStartGame, onContinueGame, onViewHighScores, onExit, onStory) {\n    const container = document.getElementById(\"game-container\");\n    container.innerHTML = \"\"; // Clear previous content\n    const welcomeScreen = document.createElement(\"div\");\n    welcomeScreen.id = \"welcome-screen\";\n    const title = document.createElement(\"h1\");\n    title.textContent = \"Welcome to Wandertrap!\";\n    title.style.textShadow = \"2px 2px 4px rgba(0, 0, 0, 0.5)\";\n    title.style.background = \"linear-gradient(45deg, #FFD700, #FFA500)\";\n    title.style.WebkitBackgroundClip = \"text\";\n    title.style.WebkitTextFillColor = \"transparent\";\n    title.style.display = \"inline-block\";\n    welcomeScreen.appendChild(title);\n    const subtitle = document.createElement(\"h2\");\n    subtitle.textContent = \"Theo got lost...\";\n    subtitle.style.color = (0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).colors.primary;\n    subtitle.style.fontSize = (0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).fontSize.subtitle;\n    subtitle.style.fontFamily = (0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).fonts.subtitle;\n    subtitle.style.marginBottom = \"30px\";\n    welcomeScreen.appendChild(subtitle);\n    if (onContinueGame) {\n        const continueButton = document.createElement(\"button\");\n        continueButton.textContent = \"Continue\";\n        continueButton.onclick = onContinueGame;\n        welcomeScreen.appendChild(continueButton);\n        (0, $f1d2fac5237d2fb3$export$a3f040807323755c)(continueButton, (0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).colors.secondary);\n    }\n    const startButton = document.createElement(\"button\");\n    startButton.textContent = \"New Game\";\n    startButton.onclick = onStartGame;\n    welcomeScreen.appendChild(startButton);\n    const storyButton = document.createElement(\"button\");\n    storyButton.textContent = \"Story\";\n    storyButton.onclick = onStory;\n    welcomeScreen.appendChild(storyButton);\n    (0, $f1d2fac5237d2fb3$export$a3f040807323755c)(storyButton, (0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).colors.primary);\n    const highScoresButton = document.createElement(\"button\");\n    highScoresButton.textContent = \"High Scores\";\n    highScoresButton.onclick = onViewHighScores;\n    welcomeScreen.appendChild(highScoresButton);\n    const exitButton = document.createElement(\"button\");\n    exitButton.textContent = \"Exit\";\n    exitButton.onclick = onExit;\n    welcomeScreen.appendChild(exitButton);\n    container.appendChild(welcomeScreen);\n    // Apply styles\n    (0, $f1d2fac5237d2fb3$export$be3cc0f1e33e9443)(container);\n    title.style.fontSize = (0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).fontSize.title;\n    title.style.marginBottom = \"20px\";\n    (0, $f1d2fac5237d2fb3$export$a3f040807323755c)(startButton);\n    (0, $f1d2fac5237d2fb3$export$a3f040807323755c)(highScoresButton);\n    (0, $f1d2fac5237d2fb3$export$a3f040807323755c)(exitButton);\n}\n\n\n\n\nfunction $2027ab8153e1bbbd$export$9b9f695373d1284f(timestamp) {\n    const now = new Date();\n    const past = new Date(timestamp);\n    const secondsAgo = Math.floor((now - past) / 1000);\n    const intervals = [\n        {\n            label: \"year\",\n            seconds: 31536000\n        },\n        {\n            label: \"month\",\n            seconds: 2592000\n        },\n        {\n            label: \"week\",\n            seconds: 604800\n        },\n        {\n            label: \"day\",\n            seconds: 86400\n        },\n        {\n            label: \"hour\",\n            seconds: 3600\n        },\n        {\n            label: \"minute\",\n            seconds: 60\n        },\n        {\n            label: \"second\",\n            seconds: 1\n        }\n    ];\n    for (const interval of intervals){\n        const count = Math.floor(secondsAgo / interval.seconds);\n        if (count >= 1) return `${count} ${interval.label}${count !== 1 ? \"s\" : \"\"} ago`;\n    }\n    return \"just now\";\n}\n\n\n// High Score screen\n// - Display list of high scores\n// - Allow player to enter their name if they achieved a high score\n// - Provide options to return to the welcome screen or start a new game\n// - Style: background color, text color, font size, list styles, button styles\nconst $f3eb23fd6013e8a3$var$highScores = [\n    {\n        name: \"Player1\",\n        score: 1000,\n        timestamp: \"2023-10-01 10:00\"\n    },\n    {\n        name: \"Player2\",\n        score: 900,\n        timestamp: \"2023-10-02 11:00\"\n    },\n    {\n        name: \"Player3\",\n        score: 800,\n        timestamp: \"2023-10-03 12:00\"\n    },\n    {\n        name: \"Player4\",\n        score: 700,\n        timestamp: \"2023-10-04 13:00\"\n    },\n    {\n        name: \"Player5\",\n        score: 600,\n        timestamp: \"2023-10-05 14:00\"\n    },\n    {\n        name: \"Player6\",\n        score: 500,\n        timestamp: \"2023-10-06 15:00\"\n    },\n    {\n        name: \"Player7\",\n        score: 400,\n        timestamp: \"2023-10-07 16:00\"\n    },\n    {\n        name: \"Player8\",\n        score: 300,\n        timestamp: \"2023-10-08 17:00\"\n    },\n    {\n        name: \"Player9\",\n        score: 200,\n        timestamp: \"2023-10-09 18:00\"\n    },\n    {\n        name: \"Player10\",\n        score: 100,\n        timestamp: \"2023-10-10 19:00\"\n    }\n];\nfunction $f3eb23fd6013e8a3$export$f3fb7af558af312e(onBack) {\n    const container = document.getElementById(\"game-container\");\n    container.innerHTML = \"\"; // Clear previous content\n    const highScoreScreen = document.createElement(\"div\");\n    highScoreScreen.id = \"high-score-screen\";\n    const title = document.createElement(\"h1\");\n    title.textContent = \"High Scores\";\n    highScoreScreen.appendChild(title);\n    const table = document.createElement(\"table\");\n    const headerRow = document.createElement(\"tr\");\n    const headers = [\n        \"Name\",\n        \"Score\",\n        \"Timestamp\"\n    ];\n    headers.forEach((headerText)=>{\n        const header = document.createElement(\"th\");\n        header.textContent = headerText;\n        headerRow.appendChild(header);\n    });\n    table.appendChild(headerRow);\n    $f3eb23fd6013e8a3$var$highScores.forEach((score)=>{\n        const row = document.createElement(\"tr\");\n        Object.values(score).forEach((text, index)=>{\n            const cell = document.createElement(\"td\");\n            if (index === 2) cell.textContent = (0, $2027ab8153e1bbbd$export$9b9f695373d1284f)(text);\n            else cell.textContent = text;\n            row.appendChild(cell);\n        });\n        table.appendChild(row);\n    });\n    highScoreScreen.appendChild(table);\n    const backButton = document.createElement(\"button\");\n    backButton.textContent = \"Back\";\n    backButton.onclick = onBack;\n    highScoreScreen.appendChild(backButton);\n    container.appendChild(highScoreScreen);\n    // Apply styles\n    (0, $f1d2fac5237d2fb3$export$be3cc0f1e33e9443)(container);\n    title.style.fontSize = (0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).fontSize.title;\n    title.style.marginBottom = \"20px\";\n    title.style.color = (0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).colors.primary;\n    table.style.margin = \"20px auto\";\n    table.style.borderRadius = \"10px\";\n    table.style.borderCollapse = \"collapse\";\n    table.style.width = \"80%\";\n    table.style.backgroundColor = (0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).colors.background;\n    table.style.color = (0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).colors.text;\n    const trs = table.querySelectorAll(\"tr\");\n    trs.forEach((tr, index)=>{\n        if (index === 0) {\n            tr.style.borderTopLeftRadius = \"10px\";\n            tr.style.borderTopRightRadius = \"10px\";\n        }\n    });\n    const ths = table.querySelectorAll(\"th\");\n    ths.forEach((th)=>{\n        th.style.border = `1px solid ${(0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).colors.primary}`;\n        // th.style.borderRadius = `10px 10px 0 0`;\n        th.style.padding = \"12px\";\n        th.style.backgroundColor = (0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).colors.secondary;\n        th.style.color = (0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).colors.text;\n        th.style.fontSize = (0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).fontSize.subtitle;\n    });\n    const tds = table.querySelectorAll(\"td\");\n    tds.forEach((td)=>{\n        td.style.border = `1px solid ${(0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).colors.secondary}`;\n        td.style.padding = \"10px\";\n        td.style.fontSize = (0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).fontSize.button;\n    });\n    // Alternating row colors for better readability\n    const rows = table.querySelectorAll(\"tr:not(:first-child)\");\n    rows.forEach((row, index)=>{\n        row.style.backgroundColor = index % 2 === 0 ? (0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).colors.background : (0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).colors.secondary + \"33\"; // 33 for 20% opacity\n    });\n    (0, $f1d2fac5237d2fb3$export$a3f040807323755c)(backButton, (0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).colors.primary);\n}\n\n\n\nfunction $acd9bc51121ae296$export$f68042e716ec6f25(currentScore, onNextLevel, onMainMenu) {\n    const container = document.getElementById(\"game-container\");\n    container.innerHTML = \"\";\n    const levelCompletedScreen = document.createElement(\"div\");\n    levelCompletedScreen.id = \"level-completed-screen\";\n    const title = document.createElement(\"h1\");\n    title.textContent = \"Level Completed!\";\n    levelCompletedScreen.appendChild(title);\n    const scoreDisplay = document.createElement(\"p\");\n    scoreDisplay.textContent = `Current Score: ${currentScore}`;\n    levelCompletedScreen.appendChild(scoreDisplay);\n    const nextLevelButton = document.createElement(\"button\");\n    nextLevelButton.textContent = \"Next Level\";\n    nextLevelButton.onclick = onNextLevel;\n    levelCompletedScreen.appendChild(nextLevelButton);\n    const mainMenuButton = document.createElement(\"button\");\n    mainMenuButton.textContent = \"Main Menu\";\n    mainMenuButton.onclick = onMainMenu;\n    levelCompletedScreen.appendChild(mainMenuButton);\n    container.appendChild(levelCompletedScreen);\n    // Apply styles\n    (0, $f1d2fac5237d2fb3$export$be3cc0f1e33e9443)(container);\n    title.style.fontSize = (0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).fontSize.title;\n    title.style.marginBottom = \"20px\";\n    scoreDisplay.style.fontSize = (0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).fontSize.subtitle;\n    scoreDisplay.style.marginBottom = \"20px\";\n    (0, $f1d2fac5237d2fb3$export$a3f040807323755c)(nextLevelButton, (0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).colors.accent);\n    (0, $f1d2fac5237d2fb3$export$a3f040807323755c)(mainMenuButton, (0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).colors.secondary);\n}\n\n\n\nfunction $49b00de062ab6150$export$8dbb486e2bbbd474(onBack) {\n    const container = document.getElementById(\"game-container\");\n    container.innerHTML = \"\"; // Clear previous content\n    const storyScreen = document.createElement(\"div\");\n    storyScreen.id = \"story-screen\";\n    // Remove book and pages\n    const textContainer = document.createElement(\"div\");\n    textContainer.id = \"text-container\";\n    textContainer.style.textAlign = \"center\";\n    storyScreen.appendChild(textContainer);\n    const paragraphs = [\n        \"Meet Theo\\u2014a brilliant but clumsy game designer with a passion for crafting the most intricate fantasy campaigns.\",\n        \"One fateful evening, while putting the finishing touches on his masterpiece labyrinth, Theo accidentally spills a can of energy drink onto his keyboard.\",\n        'Sparks fly, screens flash, and before he can say \"critical hit,\" he\\'s zapped into the very world he created!',\n        \"Blinking in disbelief, Theo finds himself standing at the entrance of his own labyrinth, a sprawling maze filled with mind-bending puzzles, hidden traps, and mythical creatures.\",\n        \"But he's not alone in there.\",\n        \"His former friend-turned-rival, Max, a fellow gamer notorious for stealing ideas, has hacked into Theo's game to claim the labyrinth as his own.\",\n        \"The power surge pulled Max into the game too, but with a devious advantage\\u2014he now controls the Minotaur, the maze's most formidable guardian.\",\n        'Max taunts Theo through ethereal echoes: \"Good luck finding your way out, Theo! This maze is mine now, and the Minotaur is eager to meet you!\"',\n        \"Determined to reclaim his creation and return to the real world, Theo must navigate through multiple levels of his labyrinth, solving his own riddles and overcoming challenges he designed to be unbeatable.\",\n        \"Along the way, he'll encounter quirky NPCs, unexpected allies, and maybe even a friendly dragon with a knack for sarcasm.\",\n        \"Can Theo outsmart Max, defeat the Minotaur, and escape the labyrinth?\",\n        \"The twists and turns of his own imagination stand between him and freedom.\",\n        \"Grab your wits, summon your courage, and step into the maze\\u2014an epic adventure awaits!\"\n    ];\n    paragraphs.forEach((text, index)=>{\n        const paragraph = document.createElement(\"p\");\n        paragraph.innerHTML = text;\n        paragraph.style.opacity = 0;\n        paragraph.style.display = \"none\";\n        paragraph.style.transition = \"opacity 1s\";\n        paragraph.style.fontSize = \"28px\";\n        textContainer.appendChild(paragraph);\n    });\n    const buttonContainer = document.createElement(\"div\");\n    buttonContainer.style.textAlign = \"center\";\n    buttonContainer.style.marginTop = \"20px\";\n    const nextButton = document.createElement(\"button\");\n    nextButton.textContent = \"Next\";\n    nextButton.onclick = showNextParagraph;\n    buttonContainer.appendChild(nextButton);\n    const skipButton = document.createElement(\"button\");\n    skipButton.textContent = \"Skip\";\n    skipButton.onclick = onBack;\n    buttonContainer.appendChild(skipButton);\n    storyScreen.appendChild(buttonContainer);\n    container.appendChild(storyScreen);\n    // Apply styles\n    (0, $f1d2fac5237d2fb3$export$be3cc0f1e33e9443)(container);\n    $49b00de062ab6150$var$styleStoryScreen(storyScreen, textContainer);\n    (0, $f1d2fac5237d2fb3$export$a3f040807323755c)(nextButton, (0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).colors.primary);\n    (0, $f1d2fac5237d2fb3$export$a3f040807323755c)(skipButton, (0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).colors.primary);\n    let currentParagraph = 0;\n    function showNextParagraph() {\n        if (currentParagraph < paragraphs.length) {\n            if (currentParagraph > 0) {\n                textContainer.children[currentParagraph - 1].style.opacity = 0;\n                textContainer.children[currentParagraph - 1].style.display = \"none\";\n            }\n            textContainer.children[currentParagraph].style.display = \"block\";\n            textContainer.children[currentParagraph].style.opacity = 1;\n            currentParagraph++;\n        }\n    }\n    // Automatically show paragraphs with a delay\n    function autoShowParagraphs() {\n        if (currentParagraph < paragraphs.length) {\n            if (currentParagraph > 0) {\n                textContainer.children[currentParagraph - 1].style.opacity = 0;\n                textContainer.children[currentParagraph - 1].style.display = \"none\";\n            }\n            textContainer.children[currentParagraph].style.display = \"block\";\n            textContainer.children[currentParagraph].style.opacity = 1;\n            currentParagraph++;\n            setTimeout(autoShowParagraphs, 5000); // Adjust delay as needed\n        }\n    }\n    autoShowParagraphs();\n}\nfunction $49b00de062ab6150$var$styleStoryScreen(storyScreen, textContainer) {\n    storyScreen.style.position = \"relative\";\n    storyScreen.style.height = \"100vh\";\n    textContainer.style.margin = \"50px auto\";\n    textContainer.style.height = \"200px\";\n    textContainer.style.width = \"70%\";\n    textContainer.style.backgroundColor = (0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).colors.primary;\n    textContainer.style.color = (0, $f1d2fac5237d2fb3$export$bca14c5b3b88a9c9).colors.text;\n    textContainer.style.padding = \"20px\";\n    textContainer.style.boxShadow = \"0 0 10px rgba(0, 0, 0, 0.5)\";\n    textContainer.style.borderRadius = \"10px\";\n}\n\n\n\n\n\n// Entry point of the game\n// - Initialize the game engine\n// - Load assets (images, sounds, etc.)\n// - Set up the game loop\n// - Handle global game state (e.g., current level, player lives, score)\n// - Transition between different screens (welcome, game, game over, high score)\nclass $1d8f8d62079e9cc1$var$GameEngine {\n    constructor(containerId){\n        this.container = document.getElementById(containerId);\n        this.canvas = document.createElement(\"canvas\");\n        this.context = this.canvas.getContext(\"2d\");\n        this.canvas.width = (0, $a159b56109fa6e34$export$ee79b8018014417).width;\n        this.canvas.height = (0, $a159b56109fa6e34$export$ee79b8018014417).height;\n        this.canvas.style.display = \"block\";\n        this.canvas.style.margin = \"auto\";\n        this.container.appendChild(this.canvas);\n        this.currentScreen = \"splash\";\n    }\n    getCanvas() {\n        return this.canvas;\n    }\n    getContext() {\n        return this.context;\n    }\n    async initialize() {\n        try {\n            console.log(\"Initializing game...\");\n            const totalAssets = 26;\n            let loadedAssets = 0;\n            const onProgress = (src, img)=>{\n                console.log(\"Progress:\", src, img);\n                loadedAssets++;\n                const progress = Math.floor(loadedAssets / totalAssets * 100);\n                (0, $88f9d7237b3a208b$export$1c045d0cca6b82bc)(progress);\n            };\n            const playerAssets = await (0, $e5dd9c56a403a66c$export$a9303be352ef857)(onProgress);\n            const levelAssets = await (0, $e5dd9c56a403a66c$export$41cc1a8d96039105)(onProgress);\n            const guardAssets = await (0, $e5dd9c56a403a66c$export$de46def7a5f5a392)(onProgress);\n            const powerupsAssets = await (0, $e5dd9c56a403a66c$export$3df0938dc8828e8b)(onProgress);\n            this.assets = {\n                playerAssets: playerAssets,\n                levelAssets: levelAssets,\n                guardAssets: guardAssets,\n                powerupsAssets: powerupsAssets\n            };\n            this.game = new (0, $ec88279b3c8da4f1$export$985739bfa5723e08)(this.container.id, this.canvas, this.context, this.assets);\n            this.showScreen(\"welcome\");\n            this.setupGameControls();\n        } catch (error) {\n            console.error(\"Error initializing game:\", error);\n        }\n    }\n    setupGameControls() {\n        window.addEventListener(\"keydown\", (event)=>{\n            switch(event.key){\n                case (0, $a159b56109fa6e34$export$582ce1a401bc3f08).esc:\n                    this.showScreen(\"welcome\");\n                    break;\n            }\n        });\n    }\n    async showScreen(screen) {\n        console.log(\"Showing screen:\", screen);\n        switch(screen){\n            case \"splash\":\n                (0, $88f9d7237b3a208b$export$bcd396c5d66a748f)(this.initialize.bind(this), ()=>this.showScreen(\"welcome\"));\n                break;\n            case \"welcome\":\n                (0, $08405cc63f9df333$export$cea7e42d5654180f)(()=>this.startGame(), this.game && this.game.started ? ()=>this.continueGame() : null, ()=>this.highScore(), ()=>this.gameOver(), ()=>this.story());\n                break;\n            case \"story\":\n                (0, $49b00de062ab6150$export$8dbb486e2bbbd474)(()=>this.showScreen(\"welcome\"));\n                break;\n            case \"game\":\n                console.log(\"Starting game...\", this.game.canvas);\n                if (!this.game.started) this.game.start();\n                else this.game.continue();\n                break;\n            case \"gameOver\":\n                this.game.started = false;\n                this.game.gameOver = true;\n                (0, $d8e2017acca67ccc$export$fd5e0515ef81867f)(this.game.score, ()=>this.startGame(), ()=>this.showScreen(\"welcome\"));\n                break;\n            case \"highScore\":\n                (0, $f3eb23fd6013e8a3$export$f3fb7af558af312e)(()=>this.showScreen(\"welcome\"));\n                break;\n            case \"levelCompleted\":\n                (0, $acd9bc51121ae296$export$f68042e716ec6f25)(this.game.score, ()=>this.startGame(), ()=>this.showScreen(\"welcome\"));\n                break;\n            default:\n                console.error(\"Unknown screen:\", screen);\n        }\n    }\n    story() {\n        this.currentScreen = \"story\";\n        this.showScreen(this.currentScreen);\n    }\n    startGame() {\n        this.currentScreen = \"game\";\n        this.showScreen(this.currentScreen);\n    }\n    continueGame() {\n        this.currentScreen = \"game\";\n        this.showScreen(this.currentScreen);\n    }\n    gameOver() {\n        this.currentScreen = \"gameOver\";\n        this.showScreen(this.currentScreen);\n    }\n    highScore() {\n        this.currentScreen = \"highScore\";\n        this.showScreen(this.currentScreen);\n    }\n}\nconst $1d8f8d62079e9cc1$var$gameEngine = new $1d8f8d62079e9cc1$var$GameEngine(\"game-container\");\n$1d8f8d62079e9cc1$var$gameEngine.showScreen(\"splash\");\n\n\n//# sourceMappingURL=index.993b7a7a.js.map\n","\"use strict\";\n\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n  for (var i = 0; i < manifest.length - 1; i += 2) {\n    mapping.set(manifest[i], {\n      baseUrl: baseUrl,\n      path: manifest[i + 1]\n    });\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping.get(id);\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","module.exports = new __parcel__URL__(\"Player.00f3c4d9.png\").toString();","module.exports = new __parcel__URL__(\"Player_Actions.bca40ab9.png\").toString();","module.exports = new __parcel__URL__(\"orc1_attack_full.fdb40cd8.png\").toString();","module.exports = new __parcel__URL__(\"orc1_death_full.bc9dd58e.png\").toString();","module.exports = new __parcel__URL__(\"orc1_hurt_full.64131593.png\").toString();","module.exports = new __parcel__URL__(\"orc1_idle_full.f3f4fbc3.png\").toString();","module.exports = new __parcel__URL__(\"orc1_run_full.e8aa27ea.png\").toString();","module.exports = new __parcel__URL__(\"orc1_run_attack_front_full.e30546ea.png\").toString();","module.exports = new __parcel__URL__(\"orc1_walk_full.d1a5a195.png\").toString();","module.exports = new __parcel__URL__(\"orc1_walk_attack_front_full.63d42a92.png\").toString();","module.exports = new __parcel__URL__(\"orc2_attack_full.6c54090d.png\").toString();","module.exports = new __parcel__URL__(\"orc2_death_full.277da092.png\").toString();","module.exports = new __parcel__URL__(\"orc2_hurt_full.48867d66.png\").toString();","module.exports = new __parcel__URL__(\"orc2_idle_full.d60b055c.png\").toString();","module.exports = new __parcel__URL__(\"orc2_run_full.22586806.png\").toString();","module.exports = new __parcel__URL__(\"orc2_run_attack_full.f470036c.png\").toString();","module.exports = new __parcel__URL__(\"orc2_walk_full.af776d65.png\").toString();","module.exports = new __parcel__URL__(\"orc2_walk_attack_full.b7833add.png\").toString();","module.exports = new __parcel__URL__(\"orc3_attack_full.0a748c24.png\").toString();","module.exports = new __parcel__URL__(\"orc3_death_full.01806b71.png\").toString();","module.exports = new __parcel__URL__(\"orc3_hurt_full.5859101d.png\").toString();","module.exports = new __parcel__URL__(\"orc3_idle_full.416d922d.png\").toString();","module.exports = new __parcel__URL__(\"orc3_run_full.5b379633.png\").toString();","module.exports = new __parcel__URL__(\"orc3_run_attack_full.bad10f7d.png\").toString();","module.exports = new __parcel__URL__(\"orc3_walk_full.999de51c.png\").toString();","module.exports = new __parcel__URL__(\"orc3_walk_attack_full.c6f0a883.png\").toString();","module.exports = new __parcel__URL__(\"Rock6_1.73bf617e.png\").toString();","module.exports = new __parcel__URL__(\"Sand_ruins3.73cad079.png\").toString();","module.exports = new __parcel__URL__(\"Snow_ruins3.dff3d94b.png\").toString();","module.exports = new __parcel__URL__(\"Yellow_ruins3.8dea241e.png\").toString();","module.exports = new __parcel__URL__(\"Green_crystal2.bc1273ec.png\").toString();","module.exports = new __parcel__URL__(\"Red_crystal2.a52bdbb5.png\").toString();","module.exports = new __parcel__URL__(\"Blue_crystal2.5546ca30.png\").toString();","module.exports = new __parcel__URL__(\"Yellow_crystal2.9e18555c.png\").toString();","require('./helpers/bundle-manifest').register(new __parcel__URL__(\"\").toString(),JSON.parse(\"[\\\"3xbAi\\\",\\\"index.993b7a7a.js\\\",\\\"itZfU\\\",\\\"Player.00f3c4d9.png\\\",\\\"ita0D\\\",\\\"Player_Actions.bca40ab9.png\\\",\\\"kaz4F\\\",\\\"orc1_attack_full.fdb40cd8.png\\\",\\\"aA0na\\\",\\\"orc1_death_full.bc9dd58e.png\\\",\\\"14oS4\\\",\\\"orc1_hurt_full.64131593.png\\\",\\\"aBOtM\\\",\\\"orc1_idle_full.f3f4fbc3.png\\\",\\\"fom00\\\",\\\"orc1_run_full.e8aa27ea.png\\\",\\\"jmNAU\\\",\\\"orc1_run_attack_front_full.e30546ea.png\\\",\\\"32waU\\\",\\\"orc1_walk_full.d1a5a195.png\\\",\\\"dG0jj\\\",\\\"orc1_walk_attack_front_full.63d42a92.png\\\",\\\"hiHze\\\",\\\"orc2_attack_full.6c54090d.png\\\",\\\"fgvI7\\\",\\\"orc2_death_full.277da092.png\\\",\\\"bU4g7\\\",\\\"orc2_hurt_full.48867d66.png\\\",\\\"lIfx8\\\",\\\"orc2_idle_full.d60b055c.png\\\",\\\"cZ4gW\\\",\\\"orc2_run_full.22586806.png\\\",\\\"eoVup\\\",\\\"orc2_run_attack_full.f470036c.png\\\",\\\"kua4s\\\",\\\"orc2_walk_full.af776d65.png\\\",\\\"acXCG\\\",\\\"orc2_walk_attack_full.b7833add.png\\\",\\\"63M4D\\\",\\\"orc3_attack_full.0a748c24.png\\\",\\\"llK0O\\\",\\\"orc3_death_full.01806b71.png\\\",\\\"4aDmc\\\",\\\"orc3_hurt_full.5859101d.png\\\",\\\"1SuzR\\\",\\\"orc3_idle_full.416d922d.png\\\",\\\"5iGxJ\\\",\\\"orc3_run_full.5b379633.png\\\",\\\"dEoH5\\\",\\\"orc3_run_attack_full.bad10f7d.png\\\",\\\"c82Rz\\\",\\\"orc3_walk_full.999de51c.png\\\",\\\"g0TG9\\\",\\\"orc3_walk_attack_full.c6f0a883.png\\\",\\\"6I6cX\\\",\\\"Rock6_1.73bf617e.png\\\",\\\"rncMt\\\",\\\"Sand_ruins3.73cad079.png\\\",\\\"5Ossz\\\",\\\"Snow_ruins3.dff3d94b.png\\\",\\\"d8MMO\\\",\\\"Yellow_ruins3.8dea241e.png\\\",\\\"h5Jde\\\",\\\"Green_crystal2.bc1273ec.png\\\",\\\"2LNSA\\\",\\\"Red_crystal2.a52bdbb5.png\\\",\\\"9XSoq\\\",\\\"Blue_crystal2.5546ca30.png\\\",\\\"7TG8P\\\",\\\"Yellow_crystal2.9e18555c.png\\\"]\"));","import { Game } from './game.js';\nimport { loadPlayerAssets, loadLevelAssets, loadGuardAssets, loadPowerUpsAssets, } from './assets.js';\nimport { showSplashScreen, updateSplashScreenProgress } from './screens/splash.js';\nimport { showWelcomeScreen, showGameOverScreen, showHighScoreScreen, showLevelCompletedScreen, showStoryScreen } from './screens/index.js';\nimport { canvasSettings, controlSettings } from './utils/settings.js';\n\n// Entry point of the game\n// - Initialize the game engine\n// - Load assets (images, sounds, etc.)\n// - Set up the game loop\n// - Handle global game state (e.g., current level, player lives, score)\n// - Transition between different screens (welcome, game, game over, high score)\n\nclass GameEngine {\n    constructor(containerId) {\n        this.container = document.getElementById(containerId);\n        this.canvas = document.createElement('canvas');\n        this.context = this.canvas.getContext('2d');\n        this.canvas.width = canvasSettings.width;\n        this.canvas.height = canvasSettings.height;\n        this.canvas.style.display = 'block';\n        this.canvas.style.margin = 'auto';\n        this.container.appendChild(this.canvas);\n        \n        this.currentScreen = 'splash';\n    }\n\n    getCanvas() {\n        return this.canvas;\n    }\n\n    getContext() {\n        return this.context;\n    }\n\n    async initialize() {\n        try {\n            console.log('Initializing game...');\n            const totalAssets = 26;\n            let loadedAssets = 0;\n\n            const onProgress = (src, img) => {\n                console.log('Progress:', src, img);\n                loadedAssets++;\n                const progress = Math.floor((loadedAssets / totalAssets) * 100);\n                updateSplashScreenProgress(progress);\n            };\n\n            const playerAssets = await loadPlayerAssets(onProgress);\n            const levelAssets = await loadLevelAssets(onProgress);\n            const guardAssets = await loadGuardAssets(onProgress);\n            const powerupsAssets = await loadPowerUpsAssets(onProgress);\n\n            this.assets = { playerAssets, levelAssets, guardAssets, powerupsAssets };\n            this.game = new Game(this.container.id, this.canvas, this.context, this.assets);\n            this.showScreen('welcome');\n            this.setupGameControls();\n        } catch (error) {\n            console.error('Error initializing game:', error);\n        }\n    }\n\n    setupGameControls() {\n        window.addEventListener('keydown', (event) => {\n            switch (event.key) {\n                case controlSettings.esc:\n                    this.showScreen('welcome');\n                    break;\n            }\n        });\n    }\n\n    async showScreen(screen) {\n        console.log('Showing screen:', screen);\n        switch (screen) {\n            case 'splash':\n                showSplashScreen(this.initialize.bind(this), () => this.showScreen('welcome'));\n                break;\n            case 'welcome':\n                showWelcomeScreen(\n                    () => this.startGame(),\n                    this.game && this.game.started ? () => this.continueGame() : null,\n                    () => this.highScore(),\n                    () => this.gameOver(),\n                    () => this.story()\n                );\n                break;\n            case 'story':\n                showStoryScreen(() => this.showScreen('welcome'));\n                break;\n            case 'game':\n                console.log('Starting game...', this.game.canvas);\n                if (!this.game.started) {\n                    this.game.start();\n                } else {\n                    this.game.continue();\n                }\n                break;\n            case 'gameOver':\n                this.game.started = false;\n                this.game.gameOver = true;\n                showGameOverScreen(this.game.score, () => this.startGame(), () => this.showScreen('welcome'));\n                break;\n            case 'highScore':\n                showHighScoreScreen(() => this.showScreen('welcome'));\n                break;\n            case 'levelCompleted':\n                showLevelCompletedScreen(this.game.score, () => this.startGame(), () => this.showScreen('welcome'));\n                break;\n            default:\n                console.error('Unknown screen:', screen);\n        }\n    }\n\n    story() {\n        this.currentScreen = 'story';\n        this.showScreen(this.currentScreen);\n    }\n\n    startGame() {\n        this.currentScreen = 'game';\n        this.showScreen(this.currentScreen);\n    }\n\n    continueGame() {\n        this.currentScreen = 'game';\n        this.showScreen(this.currentScreen);\n    }\n\n    gameOver() {\n        this.currentScreen = 'gameOver';\n        this.showScreen(this.currentScreen);\n    }\n\n    highScore() {\n        this.currentScreen = 'highScore';\n        this.showScreen(this.currentScreen);\n    }\n}\n\nconst gameEngine = new GameEngine('game-container');\ngameEngine.showScreen('splash');","import {\n  controlSettings,\n  canvasSettings,\n  playerSettings,\n  gameSettings,\n} from \"./utils/settings.js\";\nimport Player from \"./entities/player.js\";\nimport levelData from \"./levels/level-data.js\";\nimport { clearContainer } from \"./utils/canvas.js\";\nimport { isColliding } from \"./utils/game.js\";\nimport Wall from \"./entities/wall.js\";\nimport Explosive from \"./entities/explosive.js\";\nimport Guard from \"./entities/guard.js\";\nimport Obstacle from \"./entities/obstacle.js\";\nimport Powerup from \"./entities/powerup.js\";\nimport Exit from \"./entities/exit.js\";\nimport { showGameOverScreen } from \"./screens/game-over.js\";\n\n// Main game logic\n// - Initialize the game board (labyrinth)\n// - Handle player input (movement, interactions)\n// - Update game state (player position, lives, score)\n// - Check for collisions (with obstacles, powerups, explosives, guards)\n// - Handle level completion (transition to next level or game over)\n// - Render the game board and entities (player, obstacles, powerups, guards)\n\nexport class Game {\n  constructor(containerId, canvas, context, assets) {\n    this.container = document.getElementById(containerId);\n    this.canvas = canvas;\n    this.context = context;\n    this.player = null;\n    this.board = [];\n    this.entities = [];\n    this.walls = [];\n    this.exit = null;\n    this.lives = playerSettings.initialLives;\n    this.score = 0;\n    this.currentLevel = gameSettings.initialLevel;\n    this.isGameOver = false;\n    this.started = false;\n    this.assets = assets;\n    this.explosives = [];\n    this.guards = [];\n    this.obstacles = [];\n    this.powerups = [];\n  }\n\n  initializeBoard() {\n    const level = levelData.getLevel(this.currentLevel);\n    if (level) {\n      this.walls = [];\n      this.board = level.layout;\n      for (let y = 0; y < level.layout.length; y++) {\n        for (let x = 0; x < level.layout[y].length; x++) {\n          if (level.layout[y][x] === \"#\") {\n            this.walls.push(\n              new Wall(\n                x * canvasSettings.cellWidth,\n                y * canvasSettings.cellHeight,\n                \"normal\",\n                this.assets.levelAssets\n              )\n            );\n          }\n          if (level.layout[y][x] === \"X\") {\n            this.exit = new Exit(\n              x * canvasSettings.cellWidth,\n              y * canvasSettings.cellHeight,\n              this.assets.levelAssets\n            );\n          }\n        }\n      }\n    }\n  }\n\n  initializePlayer() {\n    const level = levelData.getLevel(this.currentLevel);\n    if (level) {\n      for (let y = 0; y < level.layout.length; y++) {\n        for (let x = 0; x < level.layout[y].length; x++) {\n          if (level.layout[y][x] === \"P\") {\n            this.player = new Player(\n              x * canvasSettings.cellWidth,\n              y * canvasSettings.cellHeight,\n              this.assets.playerAssets\n            );\n            this.setupInput();\n            return;\n          }\n        }\n      }\n    }\n  }\n\n  setupInput() {\n    let actionTimeout;\n\n    const debounceAction = (callback, delay) => {\n      return () => {\n        clearTimeout(actionTimeout);\n        actionTimeout = setTimeout(() => {\n          this.player.action = \"idle\";\n        }, delay);\n        callback();\n      };\n    };\n\n    window.addEventListener(\"keydown\", (event) => {\n      switch (event.key) {\n        case controlSettings.up:\n          debounceAction(() => this.player.moveUp(), 1000)();\n          break;\n        case controlSettings.down:\n          debounceAction(() => this.player.moveDown(), 1000)();\n          break;\n        case controlSettings.left:\n          debounceAction(() => this.player.moveLeft(), 1000)();\n          break;\n        case controlSettings.right:\n          debounceAction(() => this.player.moveRight(), 1000)();\n          break;\n        case controlSettings.jump:\n          debounceAction(() => this.player.jump(), 1000)();\n          break;\n        case controlSettings.attack:\n          debounceAction(() => this.player.attack(), 250)();\n          break;\n        case controlSettings.pick:\n          debounceAction(() => this.player.pick(), 150)();\n          break;\n        case controlSettings.axe:\n          debounceAction(() => this.player.axe(), 150)();\n          break;\n        case controlSettings.potion:\n          debounceAction(() => this.player.potion(), 500)();\n          break;\n      }\n    });\n  }\n\n  initializeEntities() {\n    const level = levelData.getLevel(this.currentLevel);\n\n    if (level) {\n      this.explosives = [];\n      this.guards = [];\n      this.obstacles = [];\n      this.powerups = [];\n\n      for (let y = 0; y < level.layout.length; y++) {\n        for (let x = 0; x < level.layout[y].length; x++) {\n          const cell = level.layout[y][x];\n          const position = {\n            x: x * canvasSettings.cellWidth,\n            y: y * canvasSettings.cellHeight,\n          };\n\n          switch (cell) {\n            case \"E\":\n              this.explosives.push(\n                new Explosive(position.x, position.y, this.assets)\n              );\n              break;\n            case \"G\":\n              const randomOrc = Math.floor(Math.random() * 3) + 1;\n              console.log(`orc${randomOrc}`);\n              this.guards.push(new Guard(position.x, position.y, `orc${randomOrc}`, this.assets.guardAssets));\n              break;\n            case \"O\":\n              this.obstacles.push(\n                new Obstacle(position.x, position.y, \"normal\", this.assets)\n              );\n              break;\n            case \"C\":\n              const randomPowerup = Math.floor(Math.random() * 2) + 1;\n              this.powerups.push(\n                new Powerup(position.x, position.y, randomPowerup == 1 ? \"health\" : \"mana\", this.assets.powerupsAssets)\n              );\n              break;\n          }\n        }\n      }\n    }\n  }\n\n  updateGameState() {\n    this.checkCollisions(); // Move this before player update\n    this.player.update();\n    this.explosives.forEach((explosive) => explosive.update());\n    this.guards.forEach((guard) => guard.update(this.player.getHitBox(), this.walls));\n    this.obstacles.forEach((obstacle) => obstacle.update());\n    this.powerups.forEach((powerup) => powerup.update());\n    this.checkLevelCompletion();\n  }\n\n  checkCollisions() {\n    const playerPosition = this.player.getHitBox();\n\n    // Check collisions for each direction\n    ['left', 'right', 'up', 'down'].forEach(direction => {\n      const nextPosition = this.player.checkCollision(direction);\n      const willCollide = this.walls.some(wall => \n        isColliding({\n          ...playerPosition,\n          x: nextPosition.x + playerPosition.width * 0.25,\n          y: nextPosition.y + playerPosition.height * 0.25\n        }, wall.getHitBox())\n      );\n      if (willCollide) {\n        this.player.collide({ getPosition: () => nextPosition });\n      }\n    });\n\n    this.walls.forEach((wall) => {\n      if (isColliding(playerPosition, wall.getHitBox())) {\n        console.log(\"colliding with wall\");\n        this.player.collide(wall);\n      }\n    });\n\n    this.explosives.forEach((explosive, index) => {\n      if (isColliding(playerPosition, explosive.getPosition())) {\n        if (explosive.isActive()) {\n          // Handle player damage\n        } else if (!explosive.isHidden()) {\n          this.player.collectExplosive(explosive);\n          this.explosives.splice(index, 1);\n        }\n      }\n    });\n\n    this.guards.forEach((guard, index) => {\n      if (isColliding(playerPosition, guard.getPosition())) {\n        // Handle player-guard interaction\n      }\n    });\n\n    this.obstacles.forEach((obstacle, index) => {\n      if (isColliding(playerPosition, obstacle.getPosition())) {\n        // Handle player-obstacle interaction\n      }\n    });\n\n    this.powerups.forEach((powerup, index) => {\n      if (isColliding(this.player.getPickupRange(), powerup.getPosition())) {\n        const effect = powerup.collect();\n        this.player.applyPowerup(effect);\n        this.powerups.splice(index, 1);\n      }\n    });\n  }\n\n  checkLevelCompletion() {\n    // Handle level completion (transition to next level or game over)\n    if (this.isLevelComplete()) {\n      this.currentLevel += 1;\n      this.initializeBoard();\n      this.initializePlayer();\n      this.initializeEntities();\n    }\n  }\n\n  isLevelComplete() {\n    // Game ends when player reaches the exit\n    return isColliding(this.player.getHitBox(), this.exit.getHitBox());\n  }\n\n  render() {\n    // Render the game board and entities (player, obstacles, powerups, guards)\n    // Clear the canvas\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    // Draw the grid\n    this.drawGrid();\n\n    // Draw the walls\n    this.walls.forEach((wall) => wall.draw(this.context));\n\n    // Draw the entities\n    this.obstacles.forEach((obstacle) => obstacle.draw(this.context));\n    this.powerups.forEach((powerup) => powerup.draw(this.context));\n    this.guards.forEach((guard) => guard.draw(this.context));\n    this.explosives.forEach((explosive) => explosive.draw(this.context));\n\n    // Draw the exit\n    if (this.exit) {\n      this.exit.draw(this.context);\n    }\n\n    // Draw the player\n    this.player.draw(this.context);\n\n    \n  }\n\n  drawGrid() {\n    // Create a gradient for the background\n    const gradient = this.context.createRadialGradient(\n      this.canvas.width / 2, this.canvas.height / 2, 0,\n      this.canvas.width / 2, this.canvas.height / 2, Math.max(this.canvas.width, this.canvas.height) / 2\n    );\n    gradient.addColorStop(0, '#3E8948');  // Center color (lighter green)\n    gradient.addColorStop(1, '#1A3B1F');  // Edge color (darker green)\n\n    // Fill background with gradient\n    this.context.fillStyle = gradient;\n    this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    // Set grid style\n    this.context.strokeStyle = 'rgba(0, 255, 0, 0.1)';\n    this.context.lineWidth = 1;\n\n    // Draw grid lines\n    this.context.beginPath();\n\n    // Vertical lines\n    for (let x = 0; x <= this.canvas.width; x += canvasSettings.cellWidth) {\n      this.context.moveTo(x, 0);\n      this.context.lineTo(x, this.canvas.height);\n    }\n\n    // Horizontal lines\n    for (let y = 0; y <= this.canvas.height; y += canvasSettings.cellHeight) {\n      this.context.moveTo(0, y);\n      this.context.lineTo(this.canvas.width, y);\n    }\n\n    this.context.stroke();\n  }\n\n  gameLoop() {\n    // Main game loop\n    if (this.isGameOver) return;\n    this.updateGameState();\n    this.render();\n    requestAnimationFrame(this.gameLoop.bind(this));\n  }\n\n  start() {\n    this.started = true;\n    clearContainer(this.container);\n    this.container.appendChild(this.canvas);\n    this.initializeBoard();\n    this.initializePlayer();\n    this.initializeEntities();\n    this.gameLoop();\n  }\n\n  continue() {\n    this.started = true;\n    clearContainer(this.container);\n    this.container.appendChild(this.canvas);\n  }\n}\n\nexport default Game;\n","// Game settings and configurations\n// - This file contains global settings and configurations for the game\n// - These settings can be adjusted to change the game's behavior and appearance\n\n// Canvas settings\nexport const canvasSettings = {\n    width: 64*20, // Width of the game canvas\n    height: 64*10, // Height of the game canvas\n    backgroundColor: '#2c2c2c', // Background color of the canvas\n    cellWidth: 64, // Width of each cell in the game\n    cellHeight: 64, // Height of each cell in the game\n};\n\n// Player settings\nexport const playerSettings = {\n    initialLives: 3, // Initial number of lives for the player\n    speed: 5, // Speed of the player movement\n    color: '#ff69b4', // Color of the player (funny pink color)\n};\n\n// Game settings\nexport const gameSettings = {\n    initialLevel: 1, // Initial level of the game\n    maxLevels: 10, // Maximum number of levels in the game\n    scoreIncrement: 100, // Points added to the score for each successful action\n};\n\n// Entity settings\nexport const entitySettings = {\n    enemyWidth: 91, // Width of the enemy\n    enemyHeight: 91, // Height of the enemy\n    obstacleColor: '#c62828', // Color of obstacles (Carmen red)\n    powerupColor: '#1565c0', // Color of powerups (Darker formal blue)\n    guardColor: '#ff69b4', // Color of guards (funny pink color)\n    explosiveColor: '#ffd54f', // Color of explosives (Yellow)\n    exitColor: '#4caf50', // Color of the exit (Green)\n};\n\n// Sound settings\nexport const soundSettings = {\n    mute: false, // Mute/unmute game sounds\n    volume: 0.5, // Volume level of game sounds (0.0 to 1.0)\n};\n\n// Control settings\nexport const controlSettings = {\n    up: 'ArrowUp', // Key for moving up\n    down: 'ArrowDown', // Key for moving down\n    left: 'ArrowLeft', // Key for moving left\n    right: 'ArrowRight', // Key for moving right\n    attack: 'a', // Key for attacking\n    space: ' ', // Key for jumping\n    esc: 'Escape', // Key for going back to the welcome screen\n    pick: 'p', // Key for picking\n    axe: 'x', // Key for axe\n    potion: 'u', // Key for potion\n};\n\n// Add more settings as needed for other aspects of the game","import Entity from './entity';\nimport { canvasSettings } from \"../utils/settings\";\n\nclass Player extends Entity {\n  #health;\n  #speed;\n  #blockedDirections;\n\n  constructor(x, y, assets) {\n    super(x, y, 'player', assets);\n    this.#health = 100;\n    this.#speed = 5;\n    this.explosives = [];\n    this.keys = [];\n    this.powerups = [];\n    this.#blockedDirections = {\n      left: false,\n      right: false,\n      up: false,\n      down: false\n    };\n\n    this.currentFrame = 0;\n    this.frameCount = 0;\n    this.movement = \"down\";\n    this.action = \"idle\";\n  }\n\n  selectSprites(assets) {\n    return {\n      movement: assets.playerMovement,\n      actions: assets.playerActions\n    };\n  }\n\n  getPickupRange() {\n    return {\n      x: this._position.x,\n      y: this._position.y,\n      width: this._width,\n      height: this._height,\n    };\n  }\n\n  getHitBox() {\n    return {\n      x: this._position.x + this._width * 0.25,\n      y: this._position.y + this._height * 0.25,\n      width: this._width * 0.5,\n      height: this._height * 0.5,\n    };\n  }\n\n  collide(entity) {\n    if (this.action !== \"idle\") {\n      console.log(\"Colliding\", this.action, entity.getPosition());\n      this.action = \"idle\";\n      \n      // Determine which direction is blocked\n      const entityPos = entity.getPosition();\n      const playerPos = this.getPosition();\n      \n      if (entityPos.x < playerPos.x) {\n        this.#blockedDirections.left = true;\n      } else if (entityPos.x > playerPos.x) {\n        this.#blockedDirections.right = true;\n      }\n      \n      if (entityPos.y < playerPos.y) {\n        this.#blockedDirections.up = true;\n      } else if (entityPos.y > playerPos.y) {\n        this.#blockedDirections.down = true;\n      }\n      console.log(\"blocked directions\", this.#blockedDirections);\n    }\n  }\n\n  canMove(direction) {\n    return !this.#blockedDirections[direction];\n  }\n\n  moveLeft() {\n    if (this.canMove('left')) {\n      this._position.x -= this.#speed;\n      this.action = \"walk\";\n      this.movement = \"left\";\n      this.#blockedDirections.right = false;\n    }\n  }\n\n  moveRight() {\n    if (this.canMove('right')) {\n      this._position.x += this.#speed;\n      this.action = \"walk\";\n      this.movement = \"right\";\n      this.#blockedDirections.left = false;\n    }\n  }\n\n  moveUp() {\n    if (this.canMove('up')) {\n      this._position.y -= this.#speed;\n      this.action = \"walk\";\n      this.movement = \"up\";\n      this.#blockedDirections.down = false;\n    }\n  }\n\n  moveDown() {\n    if (this.canMove('down')) {\n      this._position.y += this.#speed;\n      this.action = \"walk\";\n      this.movement = \"down\";\n      this.#blockedDirections.up = false;\n    }\n  }\n\n  attack() {\n    this.action = \"attack\";\n    // Implement attack logic here\n    console.log(\"Attacking\");\n  }\n\n  pick() {\n    this.action = \"pick\";\n    // Implement pick logic here\n    console.log(\"Picking\");\n    // Determine which object we are trying to pick based on player's position and direction\n    const pickRange = 32; // Assuming a pick range of 32 pixels (half a cell)\n    let pickPosition = { x: this._position.x, y: this._position.y };\n\n    // Adjust pick position based on player's movement direction\n    switch (this.movement) {\n      case \"left\":\n        pickPosition.x -= pickRange;\n        break;\n      case \"right\":\n        pickPosition.x += pickRange;\n        break;\n      case \"up\":\n        pickPosition.y -= pickRange;\n        break;\n      case \"down\":\n        pickPosition.y += pickRange;\n        break;\n    }\n\n    // Check for pickable objects at the determined position\n    // This part would typically interact with the game's entity management system\n    // For now, we'll just log the position where we're trying to pick\n    console.log(\n      `Attempting to pick at position: (${pickPosition.x}, ${pickPosition.y})`\n    );\n\n    // TODO: Implement actual object detection and picking logic\n    // This would involve checking for collisions with pickable entities\n    // and handling the pickup if a valid object is found\n  }\n\n  axe() {\n    this.action = \"axe\";\n    // Implement axe logic here\n    console.log(\"Axe\");\n  }\n\n  potion() {\n    this.action = \"potion\";\n    // Implement potion logic here\n    console.log(\"Potion\");\n  }\n\n  collectExplosive(explosive) {\n    this.explosives.push(explosive);\n  }\n\n  collectKey(key) {\n    this.keys.push(key);\n  }\n\n  collectPowerup(powerup) {\n    this.powerups.push(powerup);\n    // Implement powerup effect here\n    console.log(`Collected powerup: ${powerup}`);\n  }\n\n  update() {\n    // Don't reset blocked directions here\n    this.frameCount++;\n    if (this.frameCount >= 10) {\n      // Adjust frame rate as needed\n      let frames_per_action = 6;\n      if (\n        this.action === \"walk\" ||\n        this.action === \"idle\" ||\n        this.action === \"jump\"\n      ) {\n        frames_per_action = 6;\n      } else if (this.action === \"attack\" || this.action === \"duck\") {\n        frames_per_action = 4;\n      } else if (\n        this.action === \"pick\" ||\n        this.action === \"axe\" ||\n        this.action === \"potion\"\n      ) {\n        frames_per_action = 4;\n      }\n      this.currentFrame = (this.currentFrame + 1) % frames_per_action;\n      this.frameCount = 0;\n    }\n  }\n\n  // Add a new method to check for collisions before moving\n  checkCollision(direction) {\n    const nextPosition = { ...this._position };\n    switch (direction) {\n      case 'left':\n        nextPosition.x -= this.#speed;\n        break;\n      case 'right':\n        nextPosition.x += this.#speed;\n        break;\n      case 'up':\n        nextPosition.y -= this.#speed;\n        break;\n      case 'down':\n        nextPosition.y += this.#speed;\n        break;\n    }\n    return nextPosition;\n  }\n\n  draw(ctx) {\n    let spriteHeight = 32;\n    let spriteWidth = 32;\n    let spriteX = 0;\n    let spriteY = 0;\n    let spriteSheet = this._sprites.movement;\n    // mapping the sprite sheet to the actions\n    switch (this.action) {\n      case \"walk\":\n        switch (this.movement) {\n          case \"left\":\n            spriteY = 4 * spriteHeight;\n            break;\n          case \"right\":\n            spriteY = 4 * spriteHeight;\n            break;\n          case \"up\":\n            spriteY = 2 * spriteHeight;\n            break;\n          case \"down\":\n            spriteY = 0 * spriteHeight;\n            break;\n        }\n        break;\n      case \"crawl\":\n        switch (this.movement) {\n          case \"down\":\n            spriteY = 0 * spriteHeight;\n            break;\n          case \"left\":\n            spriteY = 9 * spriteHeight;\n            break;\n          case \"right\":\n            spriteY = 9 * spriteHeight;\n            break;\n          case \"up\":\n            spriteY = 0 * spriteHeight;\n            break;\n        }\n        break;\n      case \"attack\":\n        switch (this.movement) {\n          case \"down\":\n            spriteY = 6 * spriteHeight;\n            break;\n          case \"left\":\n            spriteY = 7 * spriteHeight;\n            break;\n          case \"right\":\n            spriteY = 7 * spriteHeight;\n            break;\n          case \"up\":\n            spriteY = 8 * spriteHeight;\n            break;\n        }\n        break;\n      case \"pick\":\n        spriteHeight = 48;\n        spriteWidth = 48;\n        spriteSheet = this._sprites.actions;\n        switch (this.movement) {\n          case \"down\":\n            spriteY = 1 * spriteHeight;\n            break;\n          case \"left\":\n            spriteY = 0 * spriteHeight;\n            break;\n          case \"right\":\n            spriteY = 0 * spriteHeight;\n            break;\n          case \"up\":\n            spriteY = 2 * spriteHeight;\n            break;\n        }\n        break;\n      case \"axe\":\n        spriteHeight = 48;\n        spriteWidth = 48;\n        spriteSheet = this._sprites.actions;\n        spriteX = 3 * spriteWidth;\n        spriteY = 10 * spriteHeight;\n        break;\n      case \"potion\":\n        spriteHeight = 48;\n        spriteWidth = 48;\n        spriteSheet = this._sprites.actions;\n        // spriteY = 11 * spriteHeight;\n        switch (this.movement) {\n            case \"down\":\n              spriteY = 9 * spriteHeight;\n              break;\n            case \"left\":\n              spriteY = 9 * spriteHeight;\n              break;\n            case \"right\":\n              spriteY = 9 * spriteHeight;\n              break;\n            case \"up\":\n              spriteY = 10 * spriteHeight;\n              break;\n          }\n          break;\n        break;\n      case \"idle\":\n      default:\n        switch (this.movement) {\n          case \"down\":\n            spriteY = 0 * spriteHeight;\n            break;\n          case \"left\":\n            spriteY = 1 * spriteHeight;\n            break;\n          case \"right\":\n            spriteY = 1 * spriteHeight;\n            break;\n          case \"up\":\n            spriteY = 2 * spriteHeight;\n            break;\n        }\n        break;\n    }\n\n    console.log(\"drawing player\", this.action, spriteX, spriteY);\n\n    spriteX = this.currentFrame * spriteWidth;\n\n    ctx.save();\n    if (this.movement === \"left\") {\n      ctx.scale(-1, 1);\n      ctx.drawImage(\n        spriteSheet,\n        spriteX,\n        spriteY,\n        spriteWidth,\n        spriteHeight,\n        -this._position.x - this._width,\n        this._position.y,\n        canvasSettings.cellWidth,\n        canvasSettings.cellHeight\n      );\n    } else {\n      ctx.drawImage(\n        spriteSheet,\n        spriteX,\n        spriteY,\n        spriteWidth,\n        spriteHeight,\n        this._position.x,\n        this._position.y,\n        canvasSettings.cellWidth,\n        canvasSettings.cellHeight\n      );\n    }\n    ctx.restore();\n    this.drawBoundingBox(ctx);\n  }\n\n  drawBoundingBox(ctx) {\n    // Hitbox\n    ctx.save();\n    ctx.strokeStyle = 'red';\n    ctx.lineWidth = 2;\n    ctx.strokeRect(\n      this._position.x + this._width * 0.25,\n      this._position.y + this._height * 0.25,\n      this._width * 0.5,\n      this._height * 0.5\n    );\n    ctx.restore();\n    ctx.save();\n\n    // Pickup range\n    ctx.strokeStyle = 'green';\n    ctx.lineWidth = 2;\n    ctx.strokeRect(\n      this._position.x,\n      this._position.y,\n      this._width,\n      this._height\n    );\n    ctx.restore();\n  }\n}\n\nexport default Player;\n","import { canvasSettings } from '../utils/settings';\n\nclass Entity {\n  _position;\n  _width;\n  _height;\n  _sprites;\n  _type;\n\n  constructor(x, y, type, assets, width = canvasSettings.cellWidth, height = canvasSettings.cellHeight) {\n    this._position = { x, y };\n    this._width = width;\n    this._height = height;\n    this._type = type;\n    this._sprites = this.selectSprites(assets);\n  }\n\n  getPosition() {\n    return { ...this._position };\n  }\n\n  getType() {\n    return this._type;\n  }\n\n  getHitBox() {\n    return {\n      x: this._position.x,\n      y: this._position.y,\n      width: this._width,\n      height: this._height,\n    };\n  }\n\n  selectSprites(assets) {\n    // This method should be overridden by subclasses to select appropriate sprites\n    return {};\n  }\n\n  update() {\n    // Abstract method to be implemented by subclasses\n  }\n\n  draw(ctx) {\n    // Abstract method to be implemented by subclasses\n  }\n}\n\nexport default Entity;\n","// Level data\n// - Define the structure of each level (layout of the labyrinth)\n// - Specify positions of obstacles, powerups, explosives, guards\n// - Include metadata (level number, difficulty, etc.)\n\nclass LevelData {\n    constructor() {\n        this.levels = [];\n    }\n\n    addLevel(level) {\n        this.levels.push(level);\n    }\n\n    getLevel(levelNumber) {\n        return this.levels[levelNumber - 1] || null;\n    }\n}\n\nclass Level {\n    constructor(number, difficulty, layout, theme) {\n        this.number = number;\n        this.difficulty = difficulty;\n        this.layout = layout;\n        this.theme = theme;\n    }\n}\n\n// Example usage:\nconst levelData = new LevelData();\n\n// Add levels\nlevelData.addLevel(new Level(\n    1,\n    'easy',\n    [\n        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', '#', '#', '#', '#', '#', ' ', ' ', ' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ', ' ', ' ', '#', 'P', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', '#', '#', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', 'X', '#', ' ', 'C', '#', ' ', ' ', ' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', ' ', '#', ' ', 'G', '#', ' ', ' ', ' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', 'C', 'G', ' ', 'E', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', '#', '#', '#', '#', '#', ' ', ' ', ' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ']\n    ]\n));\n\nlevelData.addLevel(new Level(\n    2,\n    'easy',\n    [\n        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', '#', '#', '#', '#', '#', ' ', ' ', ' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ', ' ', ' ', '#', 'P', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', '#', '#', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', ' ', '#', ' ', 'C', '#', ' ', ' ', ' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ', ' ', ' ', '#', 'E', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', ' ', '#', ' ', 'G', '#', ' ', ' ', ' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', 'C', 'G', ' ', 'E', ' ', 'X', ' ', ' ', ' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', '#', '#', '#', '#', '#', ' ', ' ', ' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ']\n    ]\n));\n\nlevelData.addLevel(new Level(\n    3,\n    'medium',\n    [\n        ['#', '#', '#', '#', '#', '#', '#', '#', '#', '#'],\n        ['#', 'P', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#'],\n        ['#', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', '#'],\n        ['#', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', '#'],\n        ['#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#'],\n        ['#', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', '#'],\n        ['#', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', '#'],\n        ['#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#'],\n        ['#', '#', '#', '#', '#', '#', '#', '#', '#', '#']\n    ]\n));\n\nlevelData.addLevel(new Level(\n    4,\n    'hard',\n    [\n        ['#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#'],\n        ['#', 'P', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#'],\n        ['#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', '#'],\n        ['#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', '#'],\n        ['#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#'],\n        ['#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', '#'],\n        ['#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', '#'],\n        ['#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#'],\n        ['#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#']\n    ]\n));\n\nlevelData.addLevel(new Level(\n    5,\n    'expert',\n    [\n        ['#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#'],\n        ['#', 'P', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#'],\n        ['#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', '#'],\n        ['#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', '#'],\n        ['#', 'O', ' ', 'O', ' ', 'O', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#'],\n        ['#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', '#'],\n        ['#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', '#'],\n        ['#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#'],\n        ['#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', '#'],\n        ['#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', '#'],\n        ['#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#'],\n        ['#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#']\n    ]\n));\n\nexport default levelData;","// helper functions for the canvas\nexport function clearCanvas(canvas, context) {\n    context.clearRect(0, 0, canvas.width, canvas.height);\n}\n\nexport function clearContainer(container) {\n    container.innerHTML = '';\n}\n\n","export function isColliding(rect1, rect2) {\n  return (\n    rect1.x < rect2.x + rect2.width &&\n    rect1.x + rect1.width > rect2.x &&\n    rect1.y < rect2.y + rect2.height &&\n    rect1.y + rect1.height > rect2.y\n  );\n}","import Entity from './entity';\nimport { canvasSettings } from \"../utils/settings\";\n\n// Wall entity class\n// - Represents the walls in the game\n// - Defines properties such as position, width, height\n// - May include methods for rendering the wall\n// - Could include collision detection logic specific to walls\n// - Might have different types of walls (e.g., breakable, unbreakable)\n// - Could include methods for special wall behaviors (e.g., secret passages)\n\nclass Wall extends Entity {\n  #type;\n\n  constructor(x, y, type, assets) {\n    super(x, y);\n    this.#type = type; // 'normal', 'breakable', 'secret'\n    this._sprite = assets.rock;\n  }\n\n  getType() {\n    return this.#type;\n  }\n\n  collide(entity) {\n    // Basic collision logic\n    console.log(`Collision with ${entity.constructor.name}`);\n  }\n\n  update() {\n    // Update wall state if needed (e.g., for breakable walls)\n  }\n\n  draw(ctx) {\n    const spriteX = 0;\n    let spriteY = 0;\n\n    // Select sprite based on wall type\n    switch (this.#type) {\n      case \"breakable\":\n        spriteY = canvasSettings.cellHeight;\n        break;\n      case \"secret\":\n        spriteY = canvasSettings.cellHeight * 2;\n        break;\n      default: // 'normal'\n        spriteY = 0;\n    }\n\n    ctx.drawImage(\n      this._sprite,\n      spriteX,\n      spriteY,\n      this._width,\n      this._height,\n      this._position.x,\n      this._position.y,\n      this._width,\n      this._height\n    );\n  }\n}\n\nexport default Wall;\n","import Entity from './entity';\n\n// Explosive entity\n// - Properties: position, isHidden (under obstacle), isActive\n// - Methods: detonate (trigger explosion), checkCollision (with player)\n// - Handle explosion effects (reduce player lives, visual effects)\nclass Explosive extends Entity {\n  #isHidden;\n  #isActive;\n\n  constructor(x, y, assets) {\n    super(x, y);\n    this.#isHidden = true;\n    this.#isActive = false;\n    this._sprite = assets.explosiveSprite;\n  }\n\n  isHidden() {\n    return this.#isHidden;\n  }\n\n  isActive() {\n    return this.#isActive;\n  }\n\n  reveal() {\n    this.#isHidden = false;\n  }\n\n  detonate() {\n    this.#isActive = true;\n    // Implement explosion logic here\n    console.log('Explosive detonated!');\n  }\n\n  checkCollision(entity) {\n    // Implement collision detection logic\n    // Return true if colliding, false otherwise\n  }\n\n  update() {\n    // Update explosive state if needed\n  }\n\n  draw(ctx) {\n    if (!this.#isHidden) {\n      ctx.drawImage(\n        this._sprite,\n        this._position.x,\n        this._position.y,\n        this._width,\n        this._height\n      );\n    }\n  }\n}\n\nexport default Explosive;","import Entity from \"./entity\";\nimport { canvasSettings, entitySettings } from \"../utils/settings\";\nimport { isColliding } from \"../utils/game\";\n// Guard entity class\n// - Represents the guards in the game\n// - Can move towards the player\n// - Can detect the player's position\n// - Can attack the player\n// - Can be defeated by the player\n// - Can drop powerups when defeated\n// - Can drop explosives when defeated\n// - Can drop keys when defeated\n// - Can drop keys when defeated\n\nclass Guard extends Entity {\n  #speed;\n  #detectionRange;\n  #currentSprite;\n\n  constructor(x, y, type, assets) {\n    super(\n      x,\n      y,\n      type,\n      assets,\n      entitySettings.enemyWidth,\n      entitySettings.enemyHeight\n    );\n    this.action = \"idle\";\n    this.movement = [\"down\", \"up\", \"left\", \"right\"][\n      Math.floor(Math.random() * 4)\n    ];\n    this.#speed = 1;\n    this.#detectionRange = 5 * canvasSettings.cellWidth;\n    this.#currentSprite = this._sprites.idle;\n    this.frameCount = 0;\n    this.currentFrame = 0;\n  }\n\n  selectSprites(assets) {\n    return {\n      attack: assets[`${this._type}_Attack`],\n      death: assets[`${this._type}_Death`],\n      hurt: assets[`${this._type}_Hurt`],\n      idle: assets[`${this._type}_Idle`],\n      run: assets[`${this._type}_Run`],\n      runAttack: assets[`${this._type}_Run_Attack`],\n      walk: assets[`${this._type}_Walk`],\n      walkAttack: assets[`${this._type}_Walk_Attack`],\n    };\n  }\n\n  moveTowards(target, walls) {\n    const dx = target.x - this._position.x;\n    const dy = target.y - this._position.y;\n\n    // Determine primary direction\n    if (Math.abs(dx) > Math.abs(dy)) {\n      this.movement = dx > 0 ? \"right\" : \"left\";\n    } else {\n      this.movement = dy > 0 ? \"down\" : \"up\";\n    }\n\n    // Check if movement is possible (not blocked by a wall)\n    const nextPosition = { ...this._position, width: canvasSettings.cellWidth / 2, height: canvasSettings.cellHeight / 2 };\n    switch (this.movement) {\n      case \"up\":\n        nextPosition.y -= this.#speed;\n        break;\n      case \"down\":\n        nextPosition.y += this.#speed;\n        break;\n      case \"left\":\n        nextPosition.x -= this.#speed;\n        break;\n      case \"right\":\n        nextPosition.x += this.#speed;\n        break;\n    }\n\n    const willCollideWithWalls = walls.some((wall) =>\n      isColliding(nextPosition, wall.getHitBox())\n    );\n\n    const willCollideWithPlayer = isColliding(nextPosition, target);\n    if (willCollideWithPlayer) {\n      console.log(\"Attacking player\");\n      // Determine guard's facing direction based on target position\n      if (Math.abs(dx) > Math.abs(dy)) {\n        this.movement = dx > 0 ? \"right\" : \"left\";\n      } else {\n        this.movement = dy > 0 ? \"down\" : \"up\";\n      }\n      this.attack();\n\n    } else if (!willCollideWithWalls) {\n      console.log(\"Moving towards player\");\n      this._position = nextPosition;\n      this.walk();\n    } else {\n      console.log(\"Idle\");\n      this.idle();\n    }\n  }\n\n  detectPlayer(playerPosition, walls) {\n    const dx = playerPosition.x - this._position.x;\n    const dy = playerPosition.y - this._position.y;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (distance <= this.#detectionRange) {\n      // Check if there's a clear line of sight\n      const step = {\n        x: dx / distance,\n        y: dy / distance,\n      };\n\n      let checkPosition = {\n        ...this._position,\n        width: canvasSettings.cellWidth / 2,\n        height: canvasSettings.cellHeight / 2,\n      };\n      for (let i = 0; i < distance; i += canvasSettings.cellWidth / 2) {\n        checkPosition.x += step.x * (canvasSettings.cellWidth / 2);\n        checkPosition.y += step.y * (canvasSettings.cellWidth / 2);\n\n        if (\n          walls.some((wall) => isColliding(checkPosition, wall.getHitBox()))\n        ) {\n          return false; // Wall blocking the line of sight\n        }\n      }\n      return true; // Clear line of sight to the player\n    }\n    return false; // Player out of detection range\n  }\n\n  idle() {\n    this.action = \"idle\";\n    this.#currentSprite = this._sprites.idle;\n  }\n\n  walk() {\n    this.action = \"walk\";\n    this.#currentSprite = this._sprites.walk;\n  }\n\n  attack() {\n    this.action = \"attack\";\n    this.#currentSprite = this._sprites.attack;\n  }\n\n  defeat() {\n    this.action = \"dead\";\n    this.#currentSprite = this._sprites.death;\n    // Return dropped items (powerups, explosives, keys)\n  }\n\n  lookAround() {\n    this.action = \"idle\";\n    this.#currentSprite = this._sprites.idle;\n    const directions = ['up', 'right', 'down', 'left'];\n    const currentIndex = directions.indexOf(this.movement);\n    if (currentIndex !== -1) {\n      this.movement = directions[(currentIndex + 1) % 4];\n    } else {\n      this.movement = 'up';\n    }\n  }\n\n  update(playerPosition, walls) {\n    const frames_per_action = 4;\n    const frames_per_look =  60*3; // Look around every 60 frames (about 1 second at 60 FPS)\n    const max_frame_count = this.action === 'idle' ? 60*3 : 20; \n    this.frameCount++;\n    if (this.frameCount >= max_frame_count) {\n      this.frameCount = 0;\n      this.currentFrame = (this.currentFrame + 1) % frames_per_action;\n    }\n\n    if (this.detectPlayer(playerPosition, walls)) {\n      this.moveTowards(playerPosition, walls);\n    } else {\n      if (this.frameCount % frames_per_look === 0) {\n        this.lookAround();\n      } else {\n        this.idle();\n      }\n    }\n  }\n\n  draw(ctx) {\n    let spriteHeight = 64;\n    let spriteWidth = 64;\n    let spriteX = this.currentFrame * spriteWidth;\n    let spriteY = 0;\n\n    // Determine spriteY based on movement direction\n    switch (this.movement) {\n      case \"down\":\n        spriteY = 0 * spriteHeight;\n        break;\n     case \"up\":\n        spriteY = 1 * spriteHeight;\n        break;\n      case \"left\":\n        spriteY = 2 * spriteHeight;\n        break;\n      case \"right\":\n        spriteY = 3 * spriteHeight;\n        break;\n      \n    }\n\n    ctx.drawImage(\n        this.#currentSprite,\n        spriteX,\n        spriteY,\n        spriteWidth,\n        spriteHeight,\n        this._position.x - 10,\n        this._position.y - 10,\n        this._width,\n        this._height\n      );\n  }\n}\n\nexport default Guard;\n","import Entity from \"./entity\";\nimport { canvasSettings } from \"../utils/settings\";\n\n// Obstacle entity class\n// - Represents the obstacles in the game\n// - Can be destroyed by the player\n// - Can drop powerups when destroyed\n// - Can drop explosives when destroyed\n// - Can drop keys when destroyed\n// - Can drop keys when destroyed\n\nclass Obstacle extends Entity {\n  #health;\n  #type;\n\n  constructor(x, y, type, assets) {\n    super(x, y);\n    this.#type = type;\n    this.#health = 100;\n    this._sprite = assets.obstacleSprite;\n  }\n\n  getType() {\n    return this.#type;\n  }\n\n  takeDamage(amount) {\n    this.#health -= amount;\n    if (this.#health <= 0) {\n      return this.destroy();\n    }\n    return null;\n  }\n\n  destroy() {\n    // Implement destruction logic\n    console.log(\"Obstacle destroyed!\");\n    // Return dropped items (powerups, explosives, keys)\n  }\n\n  update() {\n    // Update obstacle state if needed\n  }\n\n  draw(ctx) {\n    if (this.#health > 0) {\n      ctx.drawImage(\n        this._sprite,\n        this._position.x,\n        this._position.y,\n        this._width,\n        this._height\n      );\n    }\n  }\n}\n\nexport default Obstacle;\n","import Entity from './entity';\n\n// Powerup entity class\n// - Represents the powerups in the game\n// - Can be collected by the player\n// - Can be dropped by guards\n// - Can be dropped by obstacles\n// - Properties: position, type, collected\n// - Methods: collect (mark as collected), update, draw\nclass Powerup extends Entity {\n  #collected;\n\n  constructor(x, y, type, assets) {\n    super(x, y, type, assets);\n    this.#collected = false;\n  }\n\n  selectSprites(assets) {\n    switch (this._type) {\n      case \"health\":\n        return { crystal: assets.redCrystal };\n      case \"speed\":\n        return { crystal: assets.blueCrystal };\n      case \"strength\":\n        return { crystal: assets.greenCrystal };\n      case \"invincibility\":\n        return { crystal: assets.yellowCrystal };\n      default:\n        return { crystal: assets.blueCrystal };\n    }\n  }\n\n  collect() {\n    if (!this.#collected) {\n      this.#collected = true;\n      console.log(`Powerup collected: ${this._type}`);\n      // Return the powerup effect\n    }\n  }\n\n  // ... rest of the Powerup class methods ...\n\n  draw(ctx) {\n    if (!this.#collected) {\n      ctx.drawImage(\n        this._sprites.crystal,\n        this._position.x,\n        this._position.y,\n        this._width,\n        this._height\n      );\n    }\n  }\n}\n\nexport default Powerup;","import Entity from \"./entity\";\n\n// Exit entity class\n// - Represents the exit in the game\n// - Can be collected by the player\n// - Properties: position\n// - Methods: collect (mark as collected), update, draw\n\nclass Exit extends Entity {\n  constructor(x, y, assets) {\n    super(x, y, 'exit', assets);\n    this._sprite = assets.yellowRuin;\n    this._sparkles = this._createSparkles();\n  }\n\n  _createSparkles() {\n    const sparkleCount = 20;\n    const sparkles = [];\n    for (let i = 0; i < sparkleCount; i++) {\n      sparkles.push({\n        x: this._position.x + Math.random() * this._width,\n        y: this._position.y + Math.random() * this._height,\n        vy: -0.5 + Math.random() * 0.5 // vertical velocity\n      });\n    }\n    return sparkles;\n  }\n\n  _updateSparkles() {\n    for (const sparkle of this._sparkles) {\n      sparkle.y += sparkle.vy;\n      if (sparkle.y < this._position.y) {\n        sparkle.y = this._position.y + this._height;\n      }\n    }\n  }\n\n  draw(ctx) {\n    // Draw a semi-transparent dark rectangle over the current cell\n    ctx.fillStyle = 'rgba(255, 255, 200, 0.3)'; // Light yellow color with 30% opacity\n    ctx.fillRect(\n      this._position.x,\n      this._position.y,\n      this._width,\n      this._height\n    );\n    // Draw the exit sprite\n    ctx.drawImage(\n      this._sprite,\n      this._position.x,\n      this._position.y,\n      this._width,\n      this._height\n    );\n\n    // Update and draw sparkles\n    this._updateSparkles();\n    const sparkleSize = 1;\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.8)';\n    for (const sparkle of this._sparkles) {\n      ctx.beginPath();\n      ctx.arc(sparkle.x, sparkle.y, sparkleSize, 0, Math.PI * 2);\n      ctx.fill();\n    }\n  }\n}\n\nexport default Exit;\n","import { theme, applyContainerStyles, styleButton } from '../utils/theme.js';\n\n// Game Over screen\n// - Display \"Game Over\" message\n// - Show final score\n// - Provide options to restart the game or go to the high score screen\n// - Style: background color, text color, font size, button styles\n\nexport function showGameOverScreen(finalScore, onTryAgain, onMainMenu) {\n    const container = document.getElementById('game-container');\n    container.innerHTML = ''; // Clear previous content\n\n    const gameOverScreen = document.createElement('div');\n    gameOverScreen.id = 'game-over-screen';\n\n    const title = document.createElement('h1');\n    title.textContent = 'Game Over';\n    gameOverScreen.appendChild(title);\n\n    const message = document.createElement('p');\n    message.textContent = 'Oops! Looks like you hit a wall. Better luck next time!';\n    gameOverScreen.appendChild(message);\n\n    const scoreDisplay = document.createElement('p');\n    scoreDisplay.textContent = `Your Score: ${finalScore}`;\n    gameOverScreen.appendChild(scoreDisplay);\n\n    const tryAgainButton = document.createElement('button');\n    tryAgainButton.textContent = 'Try Again';\n    tryAgainButton.onclick = onTryAgain;\n    gameOverScreen.appendChild(tryAgainButton);\n\n    const mainMenuButton = document.createElement('button');\n    mainMenuButton.textContent = 'Main Menu';\n    mainMenuButton.onclick = onMainMenu;\n    gameOverScreen.appendChild(mainMenuButton);\n\n    container.appendChild(gameOverScreen);\n\n    // Apply styles\n    applyContainerStyles(container);\n    title.style.fontSize = theme.fontSize.title;\n    title.style.marginBottom = '20px';\n\n    message.style.fontSize = theme.fontSize.subtitle;\n    message.style.marginBottom = '20px';\n\n    scoreDisplay.style.fontSize = theme.fontSize.subtitle;\n    scoreDisplay.style.marginBottom = '20px';\n\n    styleButton(tryAgainButton, theme.colors.primary);\n    styleButton(mainMenuButton, theme.colors.secondary);\n}","// Theme configuration for the game\n// This file contains styles and colors used across different screens\n\nexport const theme = {\n    colors: {\n        background: '#1a0d00', // Dark brown for dungeon feel\n        text: '#d4af37', // Gold text for fantasy vibe\n        primary: '#8B4513', // Saddle brown to complement the existing colors\n        secondary: '#2e8b57', // Forest green for maze-like atmosphere\n        accent: '#ff4500', // Fiery orange for danger\n    },\n    fonts: {\n        main: '\"Luminari\", \"Papyrus\", fantasy', // Quirky fantasy fonts\n        subtitle: '\"Arial\", sans-serif', // More readable font for subtitles\n    },\n    fontSize: {\n        title: '52px',\n        subtitle: '28px',\n        button: '24px',\n    },\n    spacing: {\n        padding: '25px',\n    },\n    button: {\n        minWidth: '265px',\n        padding: '15px 35px',\n        borderRadius: '4px', // Sharp edges for a more labyrinthine feel\n    },\n};\n\n// Helper function to apply common styles to a container\nexport function applyContainerStyles(container) {\n    container.style.backgroundColor = theme.colors.background;\n    container.style.color = theme.colors.text;\n    container.style.fontFamily = theme.fonts.main;\n    container.style.textAlign = 'center';\n    container.style.padding = theme.spacing.padding;\n}\n\n// Helper function to style a button\nexport function styleButton(button, color = theme.colors.primary) {\n    button.style.display = 'block';\n    button.style.margin = '20px auto';\n    button.style.padding = theme.button.padding;\n    button.style.fontSize = theme.fontSize.button;\n    button.style.cursor = 'pointer';\n    button.style.backgroundColor = color;\n    button.style.color = theme.colors.text;\n    button.style.border = '2px solid ' + theme.colors.text;\n    button.style.borderRadius = theme.button.borderRadius;\n    button.style.textTransform = 'uppercase';\n    button.style.letterSpacing = '2px';\n    button.style.boxShadow = '0 0 10px rgba(212, 175, 55, 0.5)';\n    button.style.transition = 'all 0.3s ease';\n    button.style.minWidth = theme.button.minWidth;\n\n    // Add hover effect\n    button.addEventListener('mouseover', () => {\n        button.style.transform = 'scale(1.1)';\n    });\n    button.addEventListener('mouseout', () => {\n        button.style.transform = 'scale(1)';\n    });\n}","// handle the assets\n// Load player sprite sheets\n// Load enemy sprite sheets\n// Load powerup sprite sheets\n// Load explosive sprite sheets\n// Load guard sprite sheets\n// Load obstacle images\n\nfunction loadImage(src, onProgress) {\n  return new Promise((resolve, reject) => {\n    try {\n      console.log(\"Loading image:\", src);\n      const img = new Image();\n      img.src = src;\n      img.onload = () => {\n        console.log(\"Image loaded:\", src);\n        onProgress(src, img);\n        resolve(img);\n      };\n      img.onerror = (error) => {\n        console.error(\"Error loading image:\", src, error);\n        reject(new Error(`Failed to load image: ${src}`));\n      };\n    } catch (error) {\n      console.error(\"Error loading image:\", src, error);\n      reject(new Error(`Unexpected error loading image: ${src}`));\n    }\n  });\n}\n\nexport async function loadPlayerAssets(onProgress) {\n  console.log(\"Loading player assets...\");\n  const playerMovement = await loadImage(\n    require(\"../assets/images/player/Player.png\"),\n    onProgress\n  );\n  const playerActions = await loadImage(\n    require(\"../assets/images/player/Player_Actions.png\"),\n    onProgress\n  );\n\n  return { playerMovement, playerActions };\n}\n\nexport async function loadGuardAssets(onProgress) {\n  console.log(\"Loading guard assets...\");\n  // ORC 1\n  const orc1_Attack = await loadImage(\n    require(\"../assets/images/enemies/orc1/orc1_attack_full.png\"),\n    onProgress\n  );\n  const orc1_Death = await loadImage(\n    require(\"../assets/images/enemies/orc1/orc1_death_full.png\"),\n    onProgress\n  );\n  const orc1_Hurt = await loadImage(\n    require(\"../assets/images/enemies/orc1/orc1_hurt_full.png\"),\n    onProgress\n  );\n  const orc1_Idle = await loadImage(\n    require(\"../assets/images/enemies/orc1/orc1_idle_full.png\"),\n    onProgress\n  );\n  const orc1_Run = await loadImage(\n    require(\"../assets/images/enemies/orc1/orc1_run_full.png\"),\n    onProgress\n  );\n  const orc1_Run_Attack = await loadImage(\n    require(\"../assets/images/enemies/orc1/orc1_run_attack_front_full.png\"),\n    onProgress\n  );\n  const orc1_Walk = await loadImage(\n    require(\"../assets/images/enemies/orc1/orc1_walk_full.png\"),\n    onProgress\n  );\n  const orc1_Walk_Attack = await loadImage(\n    require(\"../assets/images/enemies/orc1/orc1_walk_attack_front_full.png\"),\n    onProgress\n  );\n\n  // ORC 2\n  const orc2_Attack = await loadImage(\n    require(\"../assets/images/enemies/orc2/orc2_attack_full.png\"),\n    onProgress\n  );\n  const orc2_Death = await loadImage(\n    require(\"../assets/images/enemies/orc2/orc2_death_full.png\"),\n    onProgress\n  );\n  const orc2_Hurt = await loadImage(\n    require(\"../assets/images/enemies/orc2/orc2_hurt_full.png\"),\n    onProgress\n  );\n  const orc2_Idle = await loadImage(\n    require(\"../assets/images/enemies/orc2/orc2_idle_full.png\"),\n    onProgress\n  );\n  const orc2_Run = await loadImage(\n    require(\"../assets/images/enemies/orc2/orc2_run_full.png\"),\n    onProgress\n  );\n  const orc2_Run_Attack = await loadImage(\n    require(\"../assets/images/enemies/orc2/orc2_run_attack_full.png\"),\n    onProgress\n  );\n  const orc2_Walk = await loadImage(\n    require(\"../assets/images/enemies/orc2/orc2_walk_full.png\"),\n    onProgress\n  );\n  const orc2_Walk_Attack = await loadImage(\n    require(\"../assets/images/enemies/orc2/orc2_walk_attack_full.png\"),\n    onProgress\n  );\n\n  // ORC 3\n  const orc3_Attack = await loadImage(\n    require(\"../assets/images/enemies/orc3/orc3_attack_full.png\"),\n    onProgress\n  );\n  const orc3_Death = await loadImage(\n    require(\"../assets/images/enemies/orc3/orc3_death_full.png\"),\n    onProgress\n  );    \n  const orc3_Hurt = await loadImage(\n    require(\"../assets/images/enemies/orc3/orc3_hurt_full.png\"),\n    onProgress\n  );\n  const orc3_Idle = await loadImage(\n    require(\"../assets/images/enemies/orc3/orc3_idle_full.png\"),\n    onProgress\n  );    \n  const orc3_Run = await loadImage(\n    require(\"../assets/images/enemies/orc3/orc3_run_full.png\"),\n    onProgress\n  );\n  const orc3_Run_Attack = await loadImage(\n    require(\"../assets/images/enemies/orc3/orc3_run_attack_full.png\"),\n    onProgress\n  );    \n  const orc3_Walk = await loadImage(\n    require(\"../assets/images/enemies/orc3/orc3_walk_full.png\"),\n    onProgress\n  );\n  const orc3_Walk_Attack = await loadImage(\n    require(\"../assets/images/enemies/orc3/orc3_walk_attack_full.png\"),\n    onProgress\n  );\n  \n\n  return {\n    orc1_Attack,\n    orc1_Death,\n    orc1_Hurt,\n    orc1_Idle,\n    orc1_Run,\n    orc1_Run_Attack,\n    orc1_Walk,\n    orc1_Walk_Attack,\n    orc2_Attack,\n    orc2_Death,\n    orc2_Hurt,\n    orc2_Idle,\n    orc2_Run,\n    orc2_Run_Attack,\n    orc2_Walk,\n    orc2_Walk_Attack,\n    orc3_Attack,\n    orc3_Death,\n    orc3_Hurt,\n    orc3_Idle,\n    orc3_Run,\n    orc3_Run_Attack,\n    orc3_Walk,\n    orc3_Walk_Attack,\n  };\n}\n\nexport async function loadLevelAssets(onProgress) {\n  console.log(\"Loading level assets...\");\n  const rock = await loadImage(\n    require(\"../assets/images/obstacle/Rock6_1.png\"),\n    onProgress\n  );\n  const sandRuin = await loadImage(\n    require(\"../assets/images/exit/Sand_ruins3.png\"),\n    onProgress\n  );    \n\n  const snowRuin = await loadImage(\n    require(\"../assets/images/exit/Snow_ruins3.png\"),\n    onProgress\n  );\n\n  const yellowRuin = await loadImage(\n    require(\"../assets/images/exit/Yellow_ruins3.png\"),\n    onProgress\n  );\n\n  return { rock, sandRuin, snowRuin, yellowRuin };\n}\n\nexport async function loadPowerUpsAssets(onProgress) {\n  console.log(\"Loading powerups assets...\");\n  const greenCrystal = await loadImage(\n    require(\"../assets/images/powerups/Green_crystal2.png\"),\n    onProgress\n  );\n  const redCrystal = await loadImage(\n    require(\"../assets/images/powerups/Red_crystal2.png\"),\n    onProgress\n  );\n  const blueCrystal = await loadImage(\n    require(\"../assets/images/powerups/Blue_crystal2.png\"),\n    onProgress\n  );\n  const yellowCrystal = await loadImage(\n    require(\"../assets/images/powerups/Yellow_crystal2.png\"),\n    onProgress\n  );\n\n  return { greenCrystal, redCrystal, blueCrystal, yellowCrystal };\n}\n","// Splash screen\n// - Display game logo or animation\n// - Briefly show before transitioning to the welcome screen\n// - Style: background color, logo/animation size and position\n\nexport function showSplashScreen(initialise, onComplete) {\n    const splashScreen = document.createElement('div');\n    splashScreen.id = 'splash-screen';\n    splashScreen.style.position = 'absolute';\n    splashScreen.style.top = '0';\n    splashScreen.style.left = '0';\n    splashScreen.style.width = '100%';\n    splashScreen.style.height = '100%';\n    splashScreen.style.backgroundColor = '#000';\n    splashScreen.style.display = 'flex';\n    splashScreen.style.justifyContent = 'center';\n    splashScreen.style.alignItems = 'center';\n    splashScreen.style.color = '#fff';\n    splashScreen.style.fontSize = '24px';\n    splashScreen.innerText = 'Loading... 0%';\n\n    document.body.appendChild(splashScreen);\n\n    initialise().then(() => {\n        onComplete();\n        document.body.removeChild(splashScreen);\n    });\n}\n\nexport function updateSplashScreenProgress(progress) {\n    console.log('Updating splash screen progress:', progress);\n    const splashScreen = document.getElementById('splash-screen');\n    if (splashScreen) {\n        splashScreen.innerText = `Loading... ${progress}%`;\n    }\n}","// handle the screens\n\nexport { showWelcomeScreen } from './welcome.js';\nexport { showGameOverScreen } from './game-over.js';\nexport { showHighScoreScreen } from './high-score.js';\nexport { showLevelCompletedScreen } from './level-completed.js';\nexport { showStoryScreen } from './story.js';\n\n","import { theme, applyContainerStyles, styleButton } from '../utils/theme.js';\n\n// Welcome screen logic\n// - Display game title\n// - Provide buttons to start the game, view high scores, and adjust sound settings\n// - Style: background color, text color, font size, button styles\n// - Include sound control (mute/unmute button)\n\nexport function showWelcomeScreen(onStartGame, onContinueGame, onViewHighScores, onExit, onStory) {\n    const container = document.getElementById('game-container');\n    container.innerHTML = ''; // Clear previous content\n\n    const welcomeScreen = document.createElement('div');\n    welcomeScreen.id = 'welcome-screen';\n\n    const title = document.createElement('h1');\n    title.textContent = 'Welcome to Wandertrap!';\n    title.style.textShadow = '2px 2px 4px rgba(0, 0, 0, 0.5)';\n    title.style.background = 'linear-gradient(45deg, #FFD700, #FFA500)';\n    title.style.WebkitBackgroundClip = 'text';\n    title.style.WebkitTextFillColor = 'transparent';\n    title.style.display = 'inline-block';\n    welcomeScreen.appendChild(title);\n\n    const subtitle = document.createElement('h2');\n    subtitle.textContent = 'Theo got lost...';\n    subtitle.style.color = theme.colors.primary;\n    subtitle.style.fontSize = theme.fontSize.subtitle;\n    subtitle.style.fontFamily = theme.fonts.subtitle;\n    subtitle.style.marginBottom = '30px';\n    welcomeScreen.appendChild(subtitle);\n\n    \n    if (onContinueGame) {\n        const continueButton = document.createElement('button');\n        continueButton.textContent = 'Continue';\n        continueButton.onclick = onContinueGame;\n        welcomeScreen.appendChild(continueButton);\n        styleButton(continueButton, theme.colors.secondary);\n    }\n\n    const startButton = document.createElement('button');\n    startButton.textContent = 'New Game';\n    startButton.onclick = onStartGame;\n    welcomeScreen.appendChild(startButton);\n\n    const storyButton = document.createElement('button');\n    storyButton.textContent = 'Story';\n    storyButton.onclick = onStory;\n    welcomeScreen.appendChild(storyButton);\n    styleButton(storyButton, theme.colors.primary);\n\n    const highScoresButton = document.createElement('button');\n    highScoresButton.textContent = 'High Scores';\n    highScoresButton.onclick = onViewHighScores;\n    welcomeScreen.appendChild(highScoresButton);\n\n    const exitButton = document.createElement('button');\n    exitButton.textContent = 'Exit';\n    exitButton.onclick = onExit;\n    welcomeScreen.appendChild(exitButton);\n\n    container.appendChild(welcomeScreen);\n\n    // Apply styles\n    applyContainerStyles(container);\n    title.style.fontSize = theme.fontSize.title;\n    title.style.marginBottom = '20px';\n\n    styleButton(startButton);\n    styleButton(highScoresButton);\n    styleButton(exitButton);\n}","import { theme, applyContainerStyles, styleButton } from '../utils/theme.js';\nimport { timeAgo } from '../utils/date.js';\n\n// High Score screen\n// - Display list of high scores\n// - Allow player to enter their name if they achieved a high score\n// - Provide options to return to the welcome screen or start a new game\n// - Style: background color, text color, font size, list styles, button styles\n\nconst highScores = [\n    { name: 'Player1', score: 1000, timestamp: '2023-10-01 10:00' },\n    { name: 'Player2', score: 900, timestamp: '2023-10-02 11:00' },\n    { name: 'Player3', score: 800, timestamp: '2023-10-03 12:00' },\n    { name: 'Player4', score: 700, timestamp: '2023-10-04 13:00' },\n    { name: 'Player5', score: 600, timestamp: '2023-10-05 14:00' },\n    { name: 'Player6', score: 500, timestamp: '2023-10-06 15:00' },\n    { name: 'Player7', score: 400, timestamp: '2023-10-07 16:00' },\n    { name: 'Player8', score: 300, timestamp: '2023-10-08 17:00' },\n    { name: 'Player9', score: 200, timestamp: '2023-10-09 18:00' },\n    { name: 'Player10', score: 100, timestamp: '2023-10-10 19:00' },\n];\n\nexport function showHighScoreScreen(onBack) {\n    const container = document.getElementById('game-container');\n    container.innerHTML = ''; // Clear previous content\n\n    const highScoreScreen = document.createElement('div');\n    highScoreScreen.id = 'high-score-screen';\n\n    const title = document.createElement('h1');\n    title.textContent = 'High Scores';\n    highScoreScreen.appendChild(title);\n\n    const table = document.createElement('table');\n    const headerRow = document.createElement('tr');\n    const headers = ['Name', 'Score', 'Timestamp'];\n    headers.forEach(headerText => {\n        const header = document.createElement('th');\n        header.textContent = headerText;\n        headerRow.appendChild(header);\n    });\n    table.appendChild(headerRow);\n\n    highScores.forEach(score => {\n        const row = document.createElement('tr');\n        Object.values(score).forEach((text, index) => {\n            const cell = document.createElement('td');\n            if (index === 2) {\n                cell.textContent = timeAgo(text);\n            } else {\n                cell.textContent = text;\n            }\n            row.appendChild(cell);\n        });\n        table.appendChild(row);\n    });\n\n    highScoreScreen.appendChild(table);\n\n    const backButton = document.createElement('button');\n    backButton.textContent = 'Back';\n    backButton.onclick = onBack;\n    highScoreScreen.appendChild(backButton);\n\n    container.appendChild(highScoreScreen);\n\n    // Apply styles\n    applyContainerStyles(container);\n    title.style.fontSize = theme.fontSize.title;\n    title.style.marginBottom = '20px';\n    title.style.color = theme.colors.primary;\n\n    table.style.margin = '20px auto';\n    table.style.borderRadius = '10px';\n    table.style.borderCollapse = 'collapse';\n    table.style.width = '80%';\n    table.style.backgroundColor = theme.colors.background;\n    table.style.color = theme.colors.text;\n\n    const trs = table.querySelectorAll('tr');\n    trs.forEach((tr, index) => {\n        if (index === 0) {\n            tr.style.borderTopLeftRadius = '10px';\n            tr.style.borderTopRightRadius = '10px';\n        }\n    });\n\n    const ths = table.querySelectorAll('th');\n    ths.forEach(th => {\n        th.style.border = `1px solid ${theme.colors.primary}`;\n        // th.style.borderRadius = `10px 10px 0 0`;\n        th.style.padding = '12px';\n        th.style.backgroundColor = theme.colors.secondary;\n        th.style.color = theme.colors.text;\n        th.style.fontSize = theme.fontSize.subtitle;\n    });\n\n    const tds = table.querySelectorAll('td');\n    tds.forEach(td => {\n        td.style.border = `1px solid ${theme.colors.secondary}`;\n        td.style.padding = '10px';\n        td.style.fontSize = theme.fontSize.button;\n    });\n\n    // Alternating row colors for better readability\n    const rows = table.querySelectorAll('tr:not(:first-child)');\n    rows.forEach((row, index) => {\n        row.style.backgroundColor = index % 2 === 0 ? theme.colors.background : theme.colors.secondary + '33'; // 33 for 20% opacity\n    });\n\n    styleButton(backButton, theme.colors.primary);\n}","export function timeAgo(timestamp) {\n    const now = new Date();\n    const past = new Date(timestamp);\n    const secondsAgo = Math.floor((now - past) / 1000);\n\n    const intervals = [\n        { label: 'year', seconds: 31536000 },\n        { label: 'month', seconds: 2592000 },\n        { label: 'week', seconds: 604800 },\n        { label: 'day', seconds: 86400 },\n        { label: 'hour', seconds: 3600 },\n        { label: 'minute', seconds: 60 },\n        { label: 'second', seconds: 1 }\n    ];\n\n    for (const interval of intervals) {\n        const count = Math.floor(secondsAgo / interval.seconds);\n        if (count >= 1) {\n            return `${count} ${interval.label}${count !== 1 ? 's' : ''} ago`;\n        }\n    }\n\n    return 'just now';\n}\n","import { theme, applyContainerStyles, styleButton } from '../utils/theme.js';\n\nexport function showLevelCompletedScreen(currentScore, onNextLevel, onMainMenu) {\n    const container = document.getElementById('game-container');\n    container.innerHTML = '';\n\n    const levelCompletedScreen = document.createElement('div');\n    levelCompletedScreen.id = 'level-completed-screen';\n\n    const title = document.createElement('h1');\n    title.textContent = 'Level Completed!';\n    levelCompletedScreen.appendChild(title);\n\n    const scoreDisplay = document.createElement('p');\n    scoreDisplay.textContent = `Current Score: ${currentScore}`;\n    levelCompletedScreen.appendChild(scoreDisplay);\n\n    const nextLevelButton = document.createElement('button');\n    nextLevelButton.textContent = 'Next Level';\n    nextLevelButton.onclick = onNextLevel;\n    levelCompletedScreen.appendChild(nextLevelButton);\n\n    const mainMenuButton = document.createElement('button');\n    mainMenuButton.textContent = 'Main Menu';\n    mainMenuButton.onclick = onMainMenu;\n    levelCompletedScreen.appendChild(mainMenuButton);\n\n    container.appendChild(levelCompletedScreen);\n\n    // Apply styles\n    applyContainerStyles(container);\n    title.style.fontSize = theme.fontSize.title;\n    title.style.marginBottom = '20px';\n\n    scoreDisplay.style.fontSize = theme.fontSize.subtitle;\n    scoreDisplay.style.marginBottom = '20px';\n\n    styleButton(nextLevelButton, theme.colors.accent);\n    styleButton(mainMenuButton, theme.colors.secondary);\n}","import { theme, applyContainerStyles, styleButton } from '../utils/theme.js';\n\n// Story screen\nexport function showStoryScreen(onBack) {\n    const container = document.getElementById('game-container');\n    container.innerHTML = ''; // Clear previous content\n\n    const storyScreen = document.createElement('div');\n    storyScreen.id = 'story-screen';\n\n    // Remove book and pages\n    const textContainer = document.createElement('div');\n    textContainer.id = 'text-container';\n    textContainer.style.textAlign = 'center';\n    storyScreen.appendChild(textContainer);\n\n    const paragraphs = [\n        \"Meet Theo—a brilliant but clumsy game designer with a passion for crafting the most intricate fantasy campaigns.\",\n        \"One fateful evening, while putting the finishing touches on his masterpiece labyrinth, Theo accidentally spills a can of energy drink onto his keyboard.\",\n        \"Sparks fly, screens flash, and before he can say \\\"critical hit,\\\" he's zapped into the very world he created!\",\n        \"Blinking in disbelief, Theo finds himself standing at the entrance of his own labyrinth, a sprawling maze filled with mind-bending puzzles, hidden traps, and mythical creatures.\",\n        \"But he's not alone in there.\",\n        \"His former friend-turned-rival, Max, a fellow gamer notorious for stealing ideas, has hacked into Theo's game to claim the labyrinth as his own.\",\n        \"The power surge pulled Max into the game too, but with a devious advantage—he now controls the Minotaur, the maze's most formidable guardian.\",\n        \"Max taunts Theo through ethereal echoes: \\\"Good luck finding your way out, Theo! This maze is mine now, and the Minotaur is eager to meet you!\\\"\",\n        \"Determined to reclaim his creation and return to the real world, Theo must navigate through multiple levels of his labyrinth, solving his own riddles and overcoming challenges he designed to be unbeatable.\",\n        \"Along the way, he'll encounter quirky NPCs, unexpected allies, and maybe even a friendly dragon with a knack for sarcasm.\",\n        \"Can Theo outsmart Max, defeat the Minotaur, and escape the labyrinth?\",\n        \"The twists and turns of his own imagination stand between him and freedom.\",\n        \"Grab your wits, summon your courage, and step into the maze—an epic adventure awaits!\"\n    ];\n\n    paragraphs.forEach((text, index) => {\n        const paragraph = document.createElement('p');\n        paragraph.innerHTML = text;\n        paragraph.style.opacity = 0;\n        paragraph.style.display = 'none';\n        paragraph.style.transition = 'opacity 1s';\n        paragraph.style.fontSize = '28px';\n        textContainer.appendChild(paragraph);\n    });\n\n    const buttonContainer = document.createElement('div');\n    buttonContainer.style.textAlign = 'center';\n    buttonContainer.style.marginTop = '20px';\n\n    const nextButton = document.createElement('button');\n    nextButton.textContent = 'Next';\n    nextButton.onclick = showNextParagraph;\n    buttonContainer.appendChild(nextButton);\n\n    const skipButton = document.createElement('button');\n    skipButton.textContent = 'Skip';\n    skipButton.onclick = onBack;\n    buttonContainer.appendChild(skipButton);\n\n    storyScreen.appendChild(buttonContainer);\n    container.appendChild(storyScreen);\n\n    // Apply styles\n    applyContainerStyles(container);\n    styleStoryScreen(storyScreen, textContainer);\n    styleButton(nextButton, theme.colors.primary);\n    styleButton(skipButton, theme.colors.primary);\n\n    let currentParagraph = 0;\n    function showNextParagraph() {\n        if (currentParagraph < paragraphs.length) {\n            if (currentParagraph > 0) {\n                textContainer.children[currentParagraph - 1].style.opacity = 0;\n                textContainer.children[currentParagraph - 1].style.display = 'none';\n            }\n            textContainer.children[currentParagraph].style.display = 'block';\n            textContainer.children[currentParagraph].style.opacity = 1;\n            currentParagraph++;\n        }\n    }\n\n    // Automatically show paragraphs with a delay\n    function autoShowParagraphs() {\n        if (currentParagraph < paragraphs.length) {\n            if (currentParagraph > 0) {\n                textContainer.children[currentParagraph - 1].style.opacity = 0;\n                textContainer.children[currentParagraph - 1].style.display = 'none';\n            }\n            textContainer.children[currentParagraph].style.display = 'block';\n            textContainer.children[currentParagraph].style.opacity = 1;\n            currentParagraph++;\n            setTimeout(autoShowParagraphs, 5000); // Adjust delay as needed\n        }\n    }\n\n    autoShowParagraphs();\n}\n\nfunction styleStoryScreen(storyScreen, textContainer) {\n    storyScreen.style.position = 'relative';\n    storyScreen.style.height = '100vh';\n\n    textContainer.style.margin = '50px auto';\n    textContainer.style.height = '200px';\n    textContainer.style.width = '70%';\n    textContainer.style.backgroundColor = theme.colors.primary;\n    textContainer.style.color = theme.colors.text;\n    textContainer.style.padding = '20px';\n    textContainer.style.boxShadow = '0 0 10px rgba(0, 0, 0, 0.5)';\n    textContainer.style.borderRadius = '10px';\n}"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","Object","defineProperty","get","$18c11f3350a906ea$export$6503ec6e8aabbaf","set","v","enumerable","configurable","$18c11f3350a906ea$var$mapping","Map","baseUrl","manifest","i","length","path","URL","url","toString","JSON","parse","$a159b56109fa6e34$export$ee79b8018014417","width","height","cellWidth","cellHeight","$a159b56109fa6e34$export$582ce1a401bc3f08","up","down","left","right","attack","space","esc","pick","axe","potion","$613d8f9a07a57d35$export$2e2bcd8739ae039","_position","_width","_height","_sprites","_type","constructor","x","y","type","assets","selectSprites","getPosition","getType","getHitBox","update","draw","ctx","$58a9defd0974d4fa$export$2e2bcd8739ae039","explosives","keys","powerups","currentFrame","frameCount","movement","action","playerMovement","actions","playerActions","getPickupRange","collide","entity","console","log","entityPos","playerPos","canMove","direction","moveLeft","moveRight","moveUp","moveDown","pickPosition","collectExplosive","explosive","push","collectKey","key","collectPowerup","powerup","frames_per_action","checkCollision","nextPosition","spriteHeight","spriteWidth","spriteX","spriteY","spriteSheet","save","scale","drawImage","restore","drawBoundingBox","strokeStyle","lineWidth","strokeRect","$acea30df869dd93d$var$Level","number","difficulty","layout","theme","$acea30df869dd93d$var$levelData","levels","addLevel","level","getLevel","levelNumber","$da50dde907126ea6$export$28e08eff11ac64f6","container","innerHTML","$a334e0c5dc817c7c$export$5efe44c485c74673","rect1","rect2","$98c34eedc7f1531b$export$2e2bcd8739ae039","_sprite","rock","name","$39d01997aa12fc44$export$2e2bcd8739ae039","explosiveSprite","isHidden","isActive","reveal","detonate","$467c9c65b653837c$export$2e2bcd8739ae039","Math","floor","random","idle","death","hurt","run","runAttack","walk","walkAttack","moveTowards","target","walls","dx","dy","abs","willCollideWithWalls","some","wall","detectPlayer","playerPosition","distance","sqrt","step","checkPosition","defeat","lookAround","directions","currentIndex","indexOf","max_frame_count","$1d2933984714e742$export$2e2bcd8739ae039","obstacleSprite","takeDamage","amount","destroy","$563c41e90239c5f8$export$2e2bcd8739ae039","crystal","redCrystal","blueCrystal","greenCrystal","yellowCrystal","collect","$249cd40060b2b87a$export$2e2bcd8739ae039","yellowRuin","_sparkles","_createSparkles","sparkles","vy","_updateSparkles","sparkle","fillStyle","fillRect","beginPath","arc","PI","fill","$f1d2fac5237d2fb3$export$bca14c5b3b88a9c9","colors","background","text","primary","secondary","accent","fonts","main","subtitle","fontSize","title","button","spacing","padding","minWidth","borderRadius","$f1d2fac5237d2fb3$export$be3cc0f1e33e9443","style","backgroundColor","color","fontFamily","textAlign","$f1d2fac5237d2fb3$export$a3f040807323755c","display","margin","cursor","border","textTransform","letterSpacing","boxShadow","transition","addEventListener","transform","$ec88279b3c8da4f1$export$985739bfa5723e08","containerId","canvas","context","document","getElementById","player","board","entities","exit","lives","score","currentLevel","isGameOver","started","guards","obstacles","initializeBoard","levelAssets","initializePlayer","playerAssets","setupInput","actionTimeout","debounceAction","callback","delay","clearTimeout","setTimeout","window","event","jump","initializeEntities","cell","position","randomOrc","guardAssets","randomPowerup","powerupsAssets","updateGameState","checkCollisions","forEach","guard","obstacle","checkLevelCompletion","index","splice","effect","applyPowerup","isLevelComplete","render","clearRect","drawGrid","gradient","createRadialGradient","max","addColorStop","moveTo","lineTo","stroke","gameLoop","requestAnimationFrame","bind","start","appendChild","continue","$e5dd9c56a403a66c$var$loadImage","src","onProgress","Promise","resolve","reject","img","Image","onload","onerror","error","$e5dd9c56a403a66c$export$a9303be352ef857","$e5dd9c56a403a66c$export$de46def7a5f5a392","orc1_Attack","orc1_Death","orc1_Hurt","orc1_Idle","orc1_Run","orc1_Run_Attack","orc1_Walk","orc1_Walk_Attack","orc2_Attack","orc2_Death","orc2_Hurt","orc2_Idle","orc2_Run","orc2_Run_Attack","orc2_Walk","orc2_Walk_Attack","orc3_Attack","orc3_Death","orc3_Hurt","orc3_Idle","orc3_Run","orc3_Run_Attack","orc3_Walk","orc3_Walk_Attack","$e5dd9c56a403a66c$export$41cc1a8d96039105","sandRuin","snowRuin","$e5dd9c56a403a66c$export$3df0938dc8828e8b","$f3eb23fd6013e8a3$var$highScores","timestamp","$1d8f8d62079e9cc1$var$gameEngine","createElement","getContext","currentScreen","getCanvas","initialize","loadedAssets","progress","splashScreen","innerText","game","showScreen","setupGameControls","screen","initialise","onComplete","top","justifyContent","alignItems","body","then","removeChild","onStartGame","onContinueGame","onViewHighScores","onExit","onStory","welcomeScreen","textContent","textShadow","WebkitBackgroundClip","WebkitTextFillColor","marginBottom","continueButton","onclick","startButton","storyButton","highScoresButton","exitButton","startGame","continueGame","highScore","gameOver","story","onBack","storyScreen","textContainer","paragraphs","paragraph","opacity","buttonContainer","marginTop","nextButton","currentParagraph","children","skipButton","autoShowParagraphs","finalScore","onTryAgain","onMainMenu","gameOverScreen","message","scoreDisplay","tryAgainButton","mainMenuButton","highScoreScreen","table","headerRow","headers","headerText","header","row","values","secondsAgo","now","Date","interval","label","seconds","count","backButton","borderCollapse","trs","querySelectorAll","tr","borderTopLeftRadius","borderTopRightRadius","ths","th","tds","td","rows","currentScore","onNextLevel","levelCompletedScreen","nextLevelButton"],"version":3,"file":"index.993b7a7a.js.map"}